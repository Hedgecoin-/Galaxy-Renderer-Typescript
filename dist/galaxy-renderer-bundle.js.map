{"version":3,"sources":["webpack://GalaxyRenderer/./node_modules/gl-matrix/esm/common.js","webpack://GalaxyRenderer/./node_modules/gl-matrix/esm/mat4.js","webpack://GalaxyRenderer/./node_modules/gl-matrix/esm/vec3.js","webpack://GalaxyRenderer/./src/CumulativeDistributionFunction.ts","webpack://GalaxyRenderer/./src/Galaxy.ts","webpack://GalaxyRenderer/./src/GalaxyRenderer.ts","webpack://GalaxyRenderer/./src/Helper.ts","webpack://GalaxyRenderer/./src/Types.ts","webpack://GalaxyRenderer/./src/UiController.ts","webpack://GalaxyRenderer/./src/VertexBufferBase.ts","webpack://GalaxyRenderer/./src/VertexBufferLines.ts","webpack://GalaxyRenderer/./src/VertexBufferStars.ts","webpack://GalaxyRenderer/./src/index.ts","webpack://GalaxyRenderer/webpack/bootstrap","webpack://GalaxyRenderer/webpack/runtime/define property getters","webpack://GalaxyRenderer/webpack/runtime/hasOwnProperty shorthand","webpack://GalaxyRenderer/webpack/runtime/make namespace object","webpack://GalaxyRenderer/webpack/startup"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACO;AACA;AACA;AACP;AACA;AACA;AACA,WAAW,2CAA2C;AACtD;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,QAAQ;AACrB;;AAEO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,E;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjDwC;AACxC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,KAAK;AAClB;;AAEO;AACP,gBAAgB,kDAAmB;;AAEnC,MAAM,kDAAmB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,aAAa;AACxB,aAAa,KAAK;AAClB;;AAEO;AACP,gBAAgB,kDAAmB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,aAAa;AACxB,aAAa,KAAK;AAClB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;;AAEO;AACP,gBAAgB,kDAAmB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,aAAa;AACxB,aAAa,KAAK;AAClB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,aAAa;AACxB,aAAa,KAAK;AAClB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC;;AAElC;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,aAAa;AACxB,aAAa,KAAK;AAClB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,aAAa;AACxB,aAAa,OAAO;AACpB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC;;AAElC;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,aAAa;AACxB,WAAW,aAAa;AACxB,aAAa,KAAK;AAClB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;;AAElB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,aAAa;AACxB,WAAW,aAAa;AACxB,aAAa,KAAK;AAClB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,aAAa;AACxB,WAAW,aAAa;AACxB,aAAa,KAAK;AAClB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,aAAa;AACxB,WAAW,OAAO;AAClB,WAAW,aAAa;AACxB,aAAa,KAAK;AAClB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,YAAY,+CAAgB;AAC5B;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;;AAEd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;;AAEtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,aAAa;AACxB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;;AAGH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,aAAa;AACxB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;;AAGH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,aAAa;AACxB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;;AAGH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,aAAa;AACxB,aAAa,KAAK;AAClB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,aAAa;AACxB,aAAa,KAAK;AAClB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,WAAW,aAAa;AACxB,aAAa,KAAK;AAClB;;AAEO;AACP;AACA;AACA;AACA;AACA;;AAEA,YAAY,+CAAgB;AAC5B;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;;AAEZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;;AAEO;AACP;AACA,wBAAwB;;AAExB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;;AAEO;AACP;AACA,wBAAwB;;AAExB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;;AAEO;AACP;AACA,wBAAwB;;AAExB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,MAAM;AACjB,WAAW,aAAa;AACxB,aAAa,KAAK;AAClB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,cAAc;AACzB,aAAa,KAAK;AAClB;;AAEO;AACP,wBAAwB,kDAAmB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD;;AAExD;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,KAAK;AACjB,YAAY,aAAa;AACzB,YAAY,KAAK;AACjB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,KAAK;AACjB,YAAY,aAAa;AACzB,YAAY,KAAK;AACjB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,aAAa;AACxB,YAAY,KAAK;AACjB;;AAEO;AACP,oBAAoB,kDAAmB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,MAAM;AACjB,WAAW,aAAa;AACxB,WAAW,aAAa;AACxB,aAAa,KAAK;AAClB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,MAAM;AACjB,WAAW,aAAa;AACxB,WAAW,aAAa;AACxB,WAAW,aAAa;AACxB,aAAa,KAAK;AAClB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,aAAa;AACxB;AACA,aAAa,KAAK;AAClB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,aAAa;AACxB,WAAW,aAAa;AACxB,WAAW,aAAa;AACxB,aAAa,KAAK;AAClB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,iCAAiC,+CAAgB,+BAA+B,+CAAgB,+BAA+B,+CAAgB;AAC/I;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,aAAa;AACxB,WAAW,aAAa;AACxB,WAAW,aAAa;AACxB,aAAa,KAAK;AAClB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,aAAa;AACxB,aAAa,OAAO;AACpB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA,WAAW,aAAa;AACxB,aAAa,OAAO;AACpB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,aAAa;AACxB,WAAW,aAAa;AACxB,aAAa,KAAK;AAClB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,aAAa;AACxB,WAAW,aAAa;AACxB,aAAa,KAAK;AAClB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,aAAa;AACxB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,aAAa;AACxB,WAAW,aAAa;AACxB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,aAAa;AACxB,WAAW,aAAa;AACxB,aAAa,QAAQ;AACrB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA,WAAW,aAAa;AACxB,WAAW,aAAa;AACxB,aAAa,QAAQ;AACrB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,+CAAgB,qEAAqE,+CAAgB,qEAAqE,+CAAgB,qEAAqE,+CAAgB,qEAAqE,+CAAgB,qEAAqE,+CAAgB,qEAAqE,+CAAgB,qEAAqE,+CAAgB,qEAAqE,+CAAgB,qEAAqE,+CAAgB,uEAAuE,+CAAgB,yEAAyE,+CAAgB,yEAAyE,+CAAgB,yEAAyE,+CAAgB,yEAAyE,+CAAgB,yEAAyE,+CAAgB;AAC/zC;AACA;AACA,cAAc;AACd;AACA;;AAEO;AACP;AACA,cAAc;AACd;AACA;;AAEO,mB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACrxDiC;AACxC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,KAAK;AAClB;;AAEO;AACP,gBAAgB,kDAAmB;;AAEnC,MAAM,kDAAmB;AACzB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,aAAa;AACxB,aAAa,KAAK;AAClB;;AAEO;AACP,gBAAgB,kDAAmB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,aAAa;AACxB,aAAa,OAAO;AACpB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;;AAEO;AACP,gBAAgB,kDAAmB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,aAAa;AACxB,aAAa,KAAK;AAClB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,aAAa;AACxB,WAAW,aAAa;AACxB,aAAa,KAAK;AAClB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,aAAa;AACxB,WAAW,aAAa;AACxB,aAAa,KAAK;AAClB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,aAAa;AACxB,WAAW,aAAa;AACxB,aAAa,KAAK;AAClB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,aAAa;AACxB,WAAW,aAAa;AACxB,aAAa,KAAK;AAClB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,aAAa;AACxB,aAAa,KAAK;AAClB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,aAAa;AACxB,aAAa,KAAK;AAClB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,aAAa;AACxB,WAAW,aAAa;AACxB,aAAa,KAAK;AAClB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,aAAa;AACxB,WAAW,aAAa;AACxB,aAAa,KAAK;AAClB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,aAAa;AACxB,aAAa,KAAK;AAClB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,aAAa;AACxB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,aAAa;AACxB,WAAW,aAAa;AACxB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,aAAa;AACxB,WAAW,aAAa;AACxB,aAAa,OAAO;AACpB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,aAAa;AACxB,WAAW,aAAa;AACxB,aAAa,OAAO;AACpB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,aAAa;AACxB,aAAa,OAAO;AACpB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,aAAa;AACxB,aAAa,KAAK;AAClB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,aAAa;AACxB,aAAa,KAAK;AAClB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,aAAa;AACxB,aAAa,KAAK;AAClB;;AAEO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,aAAa;AACxB,WAAW,aAAa;AACxB,aAAa,OAAO;AACpB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,aAAa;AACxB,WAAW,aAAa;AACxB,aAAa,KAAK;AAClB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,aAAa;AACxB,WAAW,aAAa;AACxB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,aAAa;AACxB,WAAW,aAAa;AACxB,WAAW,aAAa;AACxB,WAAW,aAAa;AACxB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,aAAa;AACxB,WAAW,aAAa;AACxB,WAAW,aAAa;AACxB,WAAW,aAAa;AACxB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;;AAEO;AACP;AACA,UAAU,8CAAe;AACzB,UAAU,8CAAe;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,aAAa;AACxB,WAAW,aAAa;AACxB,aAAa,KAAK;AAClB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,aAAa;AACxB,WAAW,aAAa;AACxB,aAAa,KAAK;AAClB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,aAAa;AACxB,WAAW,aAAa;AACxB,aAAa,KAAK;AAClB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;;AAEA;AACA;AACA,4BAA4B;;AAE5B;AACA;AACA,iCAAiC;;AAEjC;AACA;AACA;AACA,YAAY;;AAEZ;AACA;AACA,YAAY;;AAEZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,aAAa;AACxB,WAAW,aAAa;AACxB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;;AAEO;AACP;AACA,aAAa;;AAEb;AACA;AACA,qBAAqB;;AAErB;AACA;AACA,qDAAqD;;AAErD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,aAAa;AACxB,WAAW,aAAa;AACxB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;;AAEO;AACP;AACA,aAAa;;AAEb;AACA;AACA,qBAAqB;;AAErB;AACA;AACA,qDAAqD;;AAErD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,aAAa;AACxB,WAAW,aAAa;AACxB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;;AAEO;AACP;AACA,aAAa;;AAEb;AACA;AACA,qBAAqB;;AAErB;AACA;AACA,cAAc;;AAEd;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,aAAa;AACxB,WAAW,aAAa;AACxB,aAAa,OAAO;AACpB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,aAAa;AACxB,aAAa,OAAO;AACpB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA,WAAW,aAAa;AACxB,WAAW,aAAa;AACxB,aAAa,QAAQ;AACrB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA,WAAW,aAAa;AACxB,WAAW,aAAa;AACxB,aAAa,QAAQ;AACrB;;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CAAC,EAAE;YAC/C,EAAE,GAAG,EAAC,CAAC,EAAE,GAAG,EAAC,SAAS,EAAE,GAAG,EAAC,CAAC,SAAS,EAAE,GAAG,EAAC,CAAC,EAAE;YAC/C,EAAE,GAAG,EAAC,CAAC,EAAE,GAAG,EAAC,SAAS,EAAE,GAAG,EAAC,CAAC,SAAS,EAAE,GAAG,EAAC,CAAC,EAAE;YAC/C,EAAE,GAAG,EAAC,CAAC,EAAE,GAAG,EAAC,SAAS,EAAE,GAAG,EAAC,CAAC,SAAS,EAAE,GAAG,EAAC,CAAC,EAAE;YAC/C,EAAE,GAAG,EAAC,CAAC,EAAE,GAAG,EAAC,SAAS,EAAE,GAAG,EAAC,CAAC,SAAS,EAAE,GAAG,EAAC,CAAC,EAAE;YAC/C,EAAE,GAAG,EAAC,CAAC,EAAE,GAAG,EAAC,SAAS,EAAE,GAAG,EAAC,CAAC,SAAS,EAAE,GAAG,EAAC,CAAC,EAAE;YAC/C,EAAE,GAAG,EAAC,CAAC,EAAE,GAAG,EAAC,SAAS,EAAE,GAAG,EAAC,CAAC,QAAQ,EAAE,GAAG,EAAC,CAAC,EAAE;YAC9C,EAAE,GAAG,EAAC,CAAC,EAAE,GAAG,EAAC,QAAQ,EAAE,GAAG,EAAC,CAAC,SAAS,EAAE,GAAG,EAAC,CAAC,EAAE;YAC9C,EAAE,GAAG,EAAC,CAAC,EAAE,GAAG,EAAC,QAAQ,EAAE,GAAG,EAAC,CAAC,SAAS,EAAE,GAAG,EAAC,CAAC,EAAE;YAC9C,EAAE,GAAG,EAAC,CAAC,EAAE,GAAG,EAAC,QAAQ,EAAE,GAAG,EAAC,CAAC,SAAS,EAAE,GAAG,EAAC,CAAC,EAAE;YAC9C,EAAE,GAAG,EAAC,CAAC,EAAE,GAAG,EAAC,QAAQ,EAAE,GAAG,EAAC,CAAC,SAAS,EAAE,GAAG,EAAC,CAAC,EAAE;YAC9C,EAAE,GAAG,EAAC,CAAC,EAAE,GAAG,EAAC,QAAQ,EAAE,GAAG,EAAC,CAAC,SAAS,EAAE,GAAG,EAAC,CAAC,EAAE;YAC9C,EAAE,GAAG,EAAC,CAAC,EAAE,GAAG,EAAC,QAAQ,EAAE,GAAG,EAAC,CAAC,SAAS,EAAE,GAAG,EAAC,CAAC,EAAE;YAC9C,EAAE,GAAG,EAAC,CAAC,EAAE,GAAG,EA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","file":"galaxy-renderer-bundle.js","sourcesContent":["/**\r\n * Common utilities\r\n * @module glMatrix\r\n */\n// Configuration Constants\nexport var EPSILON = 0.000001;\nexport var ARRAY_TYPE = typeof Float32Array !== 'undefined' ? Float32Array : Array;\nexport var RANDOM = Math.random;\n/**\r\n * Sets the type of array used when creating new vectors and matrices\r\n *\r\n * @param {Float32ArrayConstructor | ArrayConstructor} type Array type, such as Float32Array or Array\r\n */\n\nexport function setMatrixArrayType(type) {\n  ARRAY_TYPE = type;\n}\nvar degree = Math.PI / 180;\n/**\r\n * Convert Degree To Radian\r\n *\r\n * @param {Number} a Angle in Degrees\r\n */\n\nexport function toRadian(a) {\n  return a * degree;\n}\n/**\r\n * Tests whether or not the arguments have approximately the same value, within an absolute\r\n * or relative tolerance of glMatrix.EPSILON (an absolute tolerance is used for values less\r\n * than or equal to 1.0, and a relative tolerance is used for larger values)\r\n *\r\n * @param {Number} a The first number to test.\r\n * @param {Number} b The second number to test.\r\n * @returns {Boolean} True if the numbers are approximately equal, false otherwise.\r\n */\n\nexport function equals(a, b) {\n  return Math.abs(a - b) <= EPSILON * Math.max(1.0, Math.abs(a), Math.abs(b));\n}\nif (!Math.hypot) Math.hypot = function () {\n  var y = 0,\n      i = arguments.length;\n\n  while (i--) {\n    y += arguments[i] * arguments[i];\n  }\n\n  return Math.sqrt(y);\n};","import * as glMatrix from \"./common.js\";\n/**\r\n * 4x4 Matrix<br>Format: column-major, when typed out it looks like row-major<br>The matrices are being post multiplied.\r\n * @module mat4\r\n */\n\n/**\r\n * Creates a new identity mat4\r\n *\r\n * @returns {mat4} a new 4x4 matrix\r\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(16);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[11] = 0;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n  }\n\n  out[0] = 1;\n  out[5] = 1;\n  out[10] = 1;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a new mat4 initialized with values from an existing matrix\r\n *\r\n * @param {ReadonlyMat4} a matrix to clone\r\n * @returns {mat4} a new 4x4 matrix\r\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(16);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  out[9] = a[9];\n  out[10] = a[10];\n  out[11] = a[11];\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\r\n * Copy the values from one mat4 to another\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the source matrix\r\n * @returns {mat4} out\r\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  out[9] = a[9];\n  out[10] = a[10];\n  out[11] = a[11];\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\r\n * Create a new mat4 with the given values\r\n *\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\r\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\r\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\r\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\r\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\r\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\r\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\r\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\r\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\r\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\r\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\r\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\r\n * @returns {mat4} A new mat4\r\n */\n\nexport function fromValues(m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n  var out = new glMatrix.ARRAY_TYPE(16);\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m03;\n  out[4] = m10;\n  out[5] = m11;\n  out[6] = m12;\n  out[7] = m13;\n  out[8] = m20;\n  out[9] = m21;\n  out[10] = m22;\n  out[11] = m23;\n  out[12] = m30;\n  out[13] = m31;\n  out[14] = m32;\n  out[15] = m33;\n  return out;\n}\n/**\r\n * Set the components of a mat4 to the given values\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\r\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\r\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\r\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\r\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\r\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\r\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\r\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\r\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\r\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\r\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\r\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\r\n * @returns {mat4} out\r\n */\n\nexport function set(out, m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m03;\n  out[4] = m10;\n  out[5] = m11;\n  out[6] = m12;\n  out[7] = m13;\n  out[8] = m20;\n  out[9] = m21;\n  out[10] = m22;\n  out[11] = m23;\n  out[12] = m30;\n  out[13] = m31;\n  out[14] = m32;\n  out[15] = m33;\n  return out;\n}\n/**\r\n * Set a mat4 to the identity matrix\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @returns {mat4} out\r\n */\n\nexport function identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Transpose the values of a mat4\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the source matrix\r\n * @returns {mat4} out\r\n */\n\nexport function transpose(out, a) {\n  // If we are transposing ourselves we can skip a few steps but have to cache some values\n  if (out === a) {\n    var a01 = a[1],\n        a02 = a[2],\n        a03 = a[3];\n    var a12 = a[6],\n        a13 = a[7];\n    var a23 = a[11];\n    out[1] = a[4];\n    out[2] = a[8];\n    out[3] = a[12];\n    out[4] = a01;\n    out[6] = a[9];\n    out[7] = a[13];\n    out[8] = a02;\n    out[9] = a12;\n    out[11] = a[14];\n    out[12] = a03;\n    out[13] = a13;\n    out[14] = a23;\n  } else {\n    out[0] = a[0];\n    out[1] = a[4];\n    out[2] = a[8];\n    out[3] = a[12];\n    out[4] = a[1];\n    out[5] = a[5];\n    out[6] = a[9];\n    out[7] = a[13];\n    out[8] = a[2];\n    out[9] = a[6];\n    out[10] = a[10];\n    out[11] = a[14];\n    out[12] = a[3];\n    out[13] = a[7];\n    out[14] = a[11];\n    out[15] = a[15];\n  }\n\n  return out;\n}\n/**\r\n * Inverts a mat4\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the source matrix\r\n * @returns {mat4} out\r\n */\n\nexport function invert(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n  var det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n  out[1] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n  out[2] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n  out[3] = (a22 * b04 - a21 * b05 - a23 * b03) * det;\n  out[4] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n  out[5] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n  out[6] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n  out[7] = (a20 * b05 - a22 * b02 + a23 * b01) * det;\n  out[8] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n  out[9] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n  out[10] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n  out[11] = (a21 * b02 - a20 * b04 - a23 * b00) * det;\n  out[12] = (a11 * b07 - a10 * b09 - a12 * b06) * det;\n  out[13] = (a00 * b09 - a01 * b07 + a02 * b06) * det;\n  out[14] = (a31 * b01 - a30 * b03 - a32 * b00) * det;\n  out[15] = (a20 * b03 - a21 * b01 + a22 * b00) * det;\n  return out;\n}\n/**\r\n * Calculates the adjugate of a mat4\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the source matrix\r\n * @returns {mat4} out\r\n */\n\nexport function adjoint(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  out[0] = a11 * (a22 * a33 - a23 * a32) - a21 * (a12 * a33 - a13 * a32) + a31 * (a12 * a23 - a13 * a22);\n  out[1] = -(a01 * (a22 * a33 - a23 * a32) - a21 * (a02 * a33 - a03 * a32) + a31 * (a02 * a23 - a03 * a22));\n  out[2] = a01 * (a12 * a33 - a13 * a32) - a11 * (a02 * a33 - a03 * a32) + a31 * (a02 * a13 - a03 * a12);\n  out[3] = -(a01 * (a12 * a23 - a13 * a22) - a11 * (a02 * a23 - a03 * a22) + a21 * (a02 * a13 - a03 * a12));\n  out[4] = -(a10 * (a22 * a33 - a23 * a32) - a20 * (a12 * a33 - a13 * a32) + a30 * (a12 * a23 - a13 * a22));\n  out[5] = a00 * (a22 * a33 - a23 * a32) - a20 * (a02 * a33 - a03 * a32) + a30 * (a02 * a23 - a03 * a22);\n  out[6] = -(a00 * (a12 * a33 - a13 * a32) - a10 * (a02 * a33 - a03 * a32) + a30 * (a02 * a13 - a03 * a12));\n  out[7] = a00 * (a12 * a23 - a13 * a22) - a10 * (a02 * a23 - a03 * a22) + a20 * (a02 * a13 - a03 * a12);\n  out[8] = a10 * (a21 * a33 - a23 * a31) - a20 * (a11 * a33 - a13 * a31) + a30 * (a11 * a23 - a13 * a21);\n  out[9] = -(a00 * (a21 * a33 - a23 * a31) - a20 * (a01 * a33 - a03 * a31) + a30 * (a01 * a23 - a03 * a21));\n  out[10] = a00 * (a11 * a33 - a13 * a31) - a10 * (a01 * a33 - a03 * a31) + a30 * (a01 * a13 - a03 * a11);\n  out[11] = -(a00 * (a11 * a23 - a13 * a21) - a10 * (a01 * a23 - a03 * a21) + a20 * (a01 * a13 - a03 * a11));\n  out[12] = -(a10 * (a21 * a32 - a22 * a31) - a20 * (a11 * a32 - a12 * a31) + a30 * (a11 * a22 - a12 * a21));\n  out[13] = a00 * (a21 * a32 - a22 * a31) - a20 * (a01 * a32 - a02 * a31) + a30 * (a01 * a22 - a02 * a21);\n  out[14] = -(a00 * (a11 * a32 - a12 * a31) - a10 * (a01 * a32 - a02 * a31) + a30 * (a01 * a12 - a02 * a11));\n  out[15] = a00 * (a11 * a22 - a12 * a21) - a10 * (a01 * a22 - a02 * a21) + a20 * (a01 * a12 - a02 * a11);\n  return out;\n}\n/**\r\n * Calculates the determinant of a mat4\r\n *\r\n * @param {ReadonlyMat4} a the source matrix\r\n * @returns {Number} determinant of a\r\n */\n\nexport function determinant(a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n  return b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n}\n/**\r\n * Multiplies two mat4s\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the first operand\r\n * @param {ReadonlyMat4} b the second operand\r\n * @returns {mat4} out\r\n */\n\nexport function multiply(out, a, b) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15]; // Cache only the current line of the second matrix\n\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  out[0] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[1] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[2] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[3] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[4];\n  b1 = b[5];\n  b2 = b[6];\n  b3 = b[7];\n  out[4] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[5] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[6] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[7] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[8];\n  b1 = b[9];\n  b2 = b[10];\n  b3 = b[11];\n  out[8] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[9] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[10] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[11] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[12];\n  b1 = b[13];\n  b2 = b[14];\n  b3 = b[15];\n  out[12] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[13] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[14] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[15] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  return out;\n}\n/**\r\n * Translate a mat4 by the given vector\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the matrix to translate\r\n * @param {ReadonlyVec3} v vector to translate by\r\n * @returns {mat4} out\r\n */\n\nexport function translate(out, a, v) {\n  var x = v[0],\n      y = v[1],\n      z = v[2];\n  var a00, a01, a02, a03;\n  var a10, a11, a12, a13;\n  var a20, a21, a22, a23;\n\n  if (a === out) {\n    out[12] = a[0] * x + a[4] * y + a[8] * z + a[12];\n    out[13] = a[1] * x + a[5] * y + a[9] * z + a[13];\n    out[14] = a[2] * x + a[6] * y + a[10] * z + a[14];\n    out[15] = a[3] * x + a[7] * y + a[11] * z + a[15];\n  } else {\n    a00 = a[0];\n    a01 = a[1];\n    a02 = a[2];\n    a03 = a[3];\n    a10 = a[4];\n    a11 = a[5];\n    a12 = a[6];\n    a13 = a[7];\n    a20 = a[8];\n    a21 = a[9];\n    a22 = a[10];\n    a23 = a[11];\n    out[0] = a00;\n    out[1] = a01;\n    out[2] = a02;\n    out[3] = a03;\n    out[4] = a10;\n    out[5] = a11;\n    out[6] = a12;\n    out[7] = a13;\n    out[8] = a20;\n    out[9] = a21;\n    out[10] = a22;\n    out[11] = a23;\n    out[12] = a00 * x + a10 * y + a20 * z + a[12];\n    out[13] = a01 * x + a11 * y + a21 * z + a[13];\n    out[14] = a02 * x + a12 * y + a22 * z + a[14];\n    out[15] = a03 * x + a13 * y + a23 * z + a[15];\n  }\n\n  return out;\n}\n/**\r\n * Scales the mat4 by the dimensions in the given vec3 not using vectorization\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the matrix to scale\r\n * @param {ReadonlyVec3} v the vec3 to scale the matrix by\r\n * @returns {mat4} out\r\n **/\n\nexport function scale(out, a, v) {\n  var x = v[0],\n      y = v[1],\n      z = v[2];\n  out[0] = a[0] * x;\n  out[1] = a[1] * x;\n  out[2] = a[2] * x;\n  out[3] = a[3] * x;\n  out[4] = a[4] * y;\n  out[5] = a[5] * y;\n  out[6] = a[6] * y;\n  out[7] = a[7] * y;\n  out[8] = a[8] * z;\n  out[9] = a[9] * z;\n  out[10] = a[10] * z;\n  out[11] = a[11] * z;\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\r\n * Rotates a mat4 by the given angle around the given axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @param {ReadonlyVec3} axis the axis to rotate around\r\n * @returns {mat4} out\r\n */\n\nexport function rotate(out, a, rad, axis) {\n  var x = axis[0],\n      y = axis[1],\n      z = axis[2];\n  var len = Math.hypot(x, y, z);\n  var s, c, t;\n  var a00, a01, a02, a03;\n  var a10, a11, a12, a13;\n  var a20, a21, a22, a23;\n  var b00, b01, b02;\n  var b10, b11, b12;\n  var b20, b21, b22;\n\n  if (len < glMatrix.EPSILON) {\n    return null;\n  }\n\n  len = 1 / len;\n  x *= len;\n  y *= len;\n  z *= len;\n  s = Math.sin(rad);\n  c = Math.cos(rad);\n  t = 1 - c;\n  a00 = a[0];\n  a01 = a[1];\n  a02 = a[2];\n  a03 = a[3];\n  a10 = a[4];\n  a11 = a[5];\n  a12 = a[6];\n  a13 = a[7];\n  a20 = a[8];\n  a21 = a[9];\n  a22 = a[10];\n  a23 = a[11]; // Construct the elements of the rotation matrix\n\n  b00 = x * x * t + c;\n  b01 = y * x * t + z * s;\n  b02 = z * x * t - y * s;\n  b10 = x * y * t - z * s;\n  b11 = y * y * t + c;\n  b12 = z * y * t + x * s;\n  b20 = x * z * t + y * s;\n  b21 = y * z * t - x * s;\n  b22 = z * z * t + c; // Perform rotation-specific matrix multiplication\n\n  out[0] = a00 * b00 + a10 * b01 + a20 * b02;\n  out[1] = a01 * b00 + a11 * b01 + a21 * b02;\n  out[2] = a02 * b00 + a12 * b01 + a22 * b02;\n  out[3] = a03 * b00 + a13 * b01 + a23 * b02;\n  out[4] = a00 * b10 + a10 * b11 + a20 * b12;\n  out[5] = a01 * b10 + a11 * b11 + a21 * b12;\n  out[6] = a02 * b10 + a12 * b11 + a22 * b12;\n  out[7] = a03 * b10 + a13 * b11 + a23 * b12;\n  out[8] = a00 * b20 + a10 * b21 + a20 * b22;\n  out[9] = a01 * b20 + a11 * b21 + a21 * b22;\n  out[10] = a02 * b20 + a12 * b21 + a22 * b22;\n  out[11] = a03 * b20 + a13 * b21 + a23 * b22;\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged last row\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  }\n\n  return out;\n}\n/**\r\n * Rotates a matrix by the given angle around the X axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\nexport function rotateX(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a10 = a[4];\n  var a11 = a[5];\n  var a12 = a[6];\n  var a13 = a[7];\n  var a20 = a[8];\n  var a21 = a[9];\n  var a22 = a[10];\n  var a23 = a[11];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged rows\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[4] = a10 * c + a20 * s;\n  out[5] = a11 * c + a21 * s;\n  out[6] = a12 * c + a22 * s;\n  out[7] = a13 * c + a23 * s;\n  out[8] = a20 * c - a10 * s;\n  out[9] = a21 * c - a11 * s;\n  out[10] = a22 * c - a12 * s;\n  out[11] = a23 * c - a13 * s;\n  return out;\n}\n/**\r\n * Rotates a matrix by the given angle around the Y axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\nexport function rotateY(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a00 = a[0];\n  var a01 = a[1];\n  var a02 = a[2];\n  var a03 = a[3];\n  var a20 = a[8];\n  var a21 = a[9];\n  var a22 = a[10];\n  var a23 = a[11];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged rows\n    out[4] = a[4];\n    out[5] = a[5];\n    out[6] = a[6];\n    out[7] = a[7];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[0] = a00 * c - a20 * s;\n  out[1] = a01 * c - a21 * s;\n  out[2] = a02 * c - a22 * s;\n  out[3] = a03 * c - a23 * s;\n  out[8] = a00 * s + a20 * c;\n  out[9] = a01 * s + a21 * c;\n  out[10] = a02 * s + a22 * c;\n  out[11] = a03 * s + a23 * c;\n  return out;\n}\n/**\r\n * Rotates a matrix by the given angle around the Z axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\nexport function rotateZ(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a00 = a[0];\n  var a01 = a[1];\n  var a02 = a[2];\n  var a03 = a[3];\n  var a10 = a[4];\n  var a11 = a[5];\n  var a12 = a[6];\n  var a13 = a[7];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged last row\n    out[8] = a[8];\n    out[9] = a[9];\n    out[10] = a[10];\n    out[11] = a[11];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[0] = a00 * c + a10 * s;\n  out[1] = a01 * c + a11 * s;\n  out[2] = a02 * c + a12 * s;\n  out[3] = a03 * c + a13 * s;\n  out[4] = a10 * c - a00 * s;\n  out[5] = a11 * c - a01 * s;\n  out[6] = a12 * c - a02 * s;\n  out[7] = a13 * c - a03 * s;\n  return out;\n}\n/**\r\n * Creates a matrix from a vector translation\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, dest, vec);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {ReadonlyVec3} v Translation vector\r\n * @returns {mat4} out\r\n */\n\nexport function fromTranslation(out, v) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from a vector scaling\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.scale(dest, dest, vec);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {ReadonlyVec3} v Scaling vector\r\n * @returns {mat4} out\r\n */\n\nexport function fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = v[1];\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = v[2];\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from a given angle around a given axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotate(dest, dest, rad, axis);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @param {ReadonlyVec3} axis the axis to rotate around\r\n * @returns {mat4} out\r\n */\n\nexport function fromRotation(out, rad, axis) {\n  var x = axis[0],\n      y = axis[1],\n      z = axis[2];\n  var len = Math.hypot(x, y, z);\n  var s, c, t;\n\n  if (len < glMatrix.EPSILON) {\n    return null;\n  }\n\n  len = 1 / len;\n  x *= len;\n  y *= len;\n  z *= len;\n  s = Math.sin(rad);\n  c = Math.cos(rad);\n  t = 1 - c; // Perform rotation-specific matrix multiplication\n\n  out[0] = x * x * t + c;\n  out[1] = y * x * t + z * s;\n  out[2] = z * x * t - y * s;\n  out[3] = 0;\n  out[4] = x * y * t - z * s;\n  out[5] = y * y * t + c;\n  out[6] = z * y * t + x * s;\n  out[7] = 0;\n  out[8] = x * z * t + y * s;\n  out[9] = y * z * t - x * s;\n  out[10] = z * z * t + c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from the given angle around the X axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotateX(dest, dest, rad);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\nexport function fromXRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = c;\n  out[6] = s;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = -s;\n  out[10] = c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from the given angle around the Y axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotateY(dest, dest, rad);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\nexport function fromYRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = c;\n  out[1] = 0;\n  out[2] = -s;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = s;\n  out[9] = 0;\n  out[10] = c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from the given angle around the Z axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotateZ(dest, dest, rad);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\nexport function fromZRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = c;\n  out[1] = s;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = -s;\n  out[5] = c;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from a quaternion rotation and vector translation\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, vec);\r\n *     let quatMat = mat4.create();\r\n *     quat4.toMat4(quat, quatMat);\r\n *     mat4.multiply(dest, quatMat);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {quat4} q Rotation quaternion\r\n * @param {ReadonlyVec3} v Translation vector\r\n * @returns {mat4} out\r\n */\n\nexport function fromRotationTranslation(out, q, v) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - (yy + zz);\n  out[1] = xy + wz;\n  out[2] = xz - wy;\n  out[3] = 0;\n  out[4] = xy - wz;\n  out[5] = 1 - (xx + zz);\n  out[6] = yz + wx;\n  out[7] = 0;\n  out[8] = xz + wy;\n  out[9] = yz - wx;\n  out[10] = 1 - (xx + yy);\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a new mat4 from a dual quat.\r\n *\r\n * @param {mat4} out Matrix\r\n * @param {ReadonlyQuat2} a Dual Quaternion\r\n * @returns {mat4} mat4 receiving operation result\r\n */\n\nexport function fromQuat2(out, a) {\n  var translation = new glMatrix.ARRAY_TYPE(3);\n  var bx = -a[0],\n      by = -a[1],\n      bz = -a[2],\n      bw = a[3],\n      ax = a[4],\n      ay = a[5],\n      az = a[6],\n      aw = a[7];\n  var magnitude = bx * bx + by * by + bz * bz + bw * bw; //Only scale if it makes sense\n\n  if (magnitude > 0) {\n    translation[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2 / magnitude;\n    translation[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2 / magnitude;\n    translation[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2 / magnitude;\n  } else {\n    translation[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2;\n    translation[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2;\n    translation[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2;\n  }\n\n  fromRotationTranslation(out, a, translation);\n  return out;\n}\n/**\r\n * Returns the translation vector component of a transformation\r\n *  matrix. If a matrix is built with fromRotationTranslation,\r\n *  the returned vector will be the same as the translation vector\r\n *  originally supplied.\r\n * @param  {vec3} out Vector to receive translation component\r\n * @param  {ReadonlyMat4} mat Matrix to be decomposed (input)\r\n * @return {vec3} out\r\n */\n\nexport function getTranslation(out, mat) {\n  out[0] = mat[12];\n  out[1] = mat[13];\n  out[2] = mat[14];\n  return out;\n}\n/**\r\n * Returns the scaling factor component of a transformation\r\n *  matrix. If a matrix is built with fromRotationTranslationScale\r\n *  with a normalized Quaternion paramter, the returned vector will be\r\n *  the same as the scaling vector\r\n *  originally supplied.\r\n * @param  {vec3} out Vector to receive scaling factor component\r\n * @param  {ReadonlyMat4} mat Matrix to be decomposed (input)\r\n * @return {vec3} out\r\n */\n\nexport function getScaling(out, mat) {\n  var m11 = mat[0];\n  var m12 = mat[1];\n  var m13 = mat[2];\n  var m21 = mat[4];\n  var m22 = mat[5];\n  var m23 = mat[6];\n  var m31 = mat[8];\n  var m32 = mat[9];\n  var m33 = mat[10];\n  out[0] = Math.hypot(m11, m12, m13);\n  out[1] = Math.hypot(m21, m22, m23);\n  out[2] = Math.hypot(m31, m32, m33);\n  return out;\n}\n/**\r\n * Returns a quaternion representing the rotational component\r\n *  of a transformation matrix. If a matrix is built with\r\n *  fromRotationTranslation, the returned quaternion will be the\r\n *  same as the quaternion originally supplied.\r\n * @param {quat} out Quaternion to receive the rotation component\r\n * @param {ReadonlyMat4} mat Matrix to be decomposed (input)\r\n * @return {quat} out\r\n */\n\nexport function getRotation(out, mat) {\n  var scaling = new glMatrix.ARRAY_TYPE(3);\n  getScaling(scaling, mat);\n  var is1 = 1 / scaling[0];\n  var is2 = 1 / scaling[1];\n  var is3 = 1 / scaling[2];\n  var sm11 = mat[0] * is1;\n  var sm12 = mat[1] * is2;\n  var sm13 = mat[2] * is3;\n  var sm21 = mat[4] * is1;\n  var sm22 = mat[5] * is2;\n  var sm23 = mat[6] * is3;\n  var sm31 = mat[8] * is1;\n  var sm32 = mat[9] * is2;\n  var sm33 = mat[10] * is3;\n  var trace = sm11 + sm22 + sm33;\n  var S = 0;\n\n  if (trace > 0) {\n    S = Math.sqrt(trace + 1.0) * 2;\n    out[3] = 0.25 * S;\n    out[0] = (sm23 - sm32) / S;\n    out[1] = (sm31 - sm13) / S;\n    out[2] = (sm12 - sm21) / S;\n  } else if (sm11 > sm22 && sm11 > sm33) {\n    S = Math.sqrt(1.0 + sm11 - sm22 - sm33) * 2;\n    out[3] = (sm23 - sm32) / S;\n    out[0] = 0.25 * S;\n    out[1] = (sm12 + sm21) / S;\n    out[2] = (sm31 + sm13) / S;\n  } else if (sm22 > sm33) {\n    S = Math.sqrt(1.0 + sm22 - sm11 - sm33) * 2;\n    out[3] = (sm31 - sm13) / S;\n    out[0] = (sm12 + sm21) / S;\n    out[1] = 0.25 * S;\n    out[2] = (sm23 + sm32) / S;\n  } else {\n    S = Math.sqrt(1.0 + sm33 - sm11 - sm22) * 2;\n    out[3] = (sm12 - sm21) / S;\n    out[0] = (sm31 + sm13) / S;\n    out[1] = (sm23 + sm32) / S;\n    out[2] = 0.25 * S;\n  }\n\n  return out;\n}\n/**\r\n * Creates a matrix from a quaternion rotation, vector translation and vector scale\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, vec);\r\n *     let quatMat = mat4.create();\r\n *     quat4.toMat4(quat, quatMat);\r\n *     mat4.multiply(dest, quatMat);\r\n *     mat4.scale(dest, scale)\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {quat4} q Rotation quaternion\r\n * @param {ReadonlyVec3} v Translation vector\r\n * @param {ReadonlyVec3} s Scaling vector\r\n * @returns {mat4} out\r\n */\n\nexport function fromRotationTranslationScale(out, q, v, s) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  var sx = s[0];\n  var sy = s[1];\n  var sz = s[2];\n  out[0] = (1 - (yy + zz)) * sx;\n  out[1] = (xy + wz) * sx;\n  out[2] = (xz - wy) * sx;\n  out[3] = 0;\n  out[4] = (xy - wz) * sy;\n  out[5] = (1 - (xx + zz)) * sy;\n  out[6] = (yz + wx) * sy;\n  out[7] = 0;\n  out[8] = (xz + wy) * sz;\n  out[9] = (yz - wx) * sz;\n  out[10] = (1 - (xx + yy)) * sz;\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from a quaternion rotation, vector translation and vector scale, rotating and scaling around the given origin\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, vec);\r\n *     mat4.translate(dest, origin);\r\n *     let quatMat = mat4.create();\r\n *     quat4.toMat4(quat, quatMat);\r\n *     mat4.multiply(dest, quatMat);\r\n *     mat4.scale(dest, scale)\r\n *     mat4.translate(dest, negativeOrigin);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {quat4} q Rotation quaternion\r\n * @param {ReadonlyVec3} v Translation vector\r\n * @param {ReadonlyVec3} s Scaling vector\r\n * @param {ReadonlyVec3} o The origin vector around which to scale and rotate\r\n * @returns {mat4} out\r\n */\n\nexport function fromRotationTranslationScaleOrigin(out, q, v, s, o) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  var sx = s[0];\n  var sy = s[1];\n  var sz = s[2];\n  var ox = o[0];\n  var oy = o[1];\n  var oz = o[2];\n  var out0 = (1 - (yy + zz)) * sx;\n  var out1 = (xy + wz) * sx;\n  var out2 = (xz - wy) * sx;\n  var out4 = (xy - wz) * sy;\n  var out5 = (1 - (xx + zz)) * sy;\n  var out6 = (yz + wx) * sy;\n  var out8 = (xz + wy) * sz;\n  var out9 = (yz - wx) * sz;\n  var out10 = (1 - (xx + yy)) * sz;\n  out[0] = out0;\n  out[1] = out1;\n  out[2] = out2;\n  out[3] = 0;\n  out[4] = out4;\n  out[5] = out5;\n  out[6] = out6;\n  out[7] = 0;\n  out[8] = out8;\n  out[9] = out9;\n  out[10] = out10;\n  out[11] = 0;\n  out[12] = v[0] + ox - (out0 * ox + out4 * oy + out8 * oz);\n  out[13] = v[1] + oy - (out1 * ox + out5 * oy + out9 * oz);\n  out[14] = v[2] + oz - (out2 * ox + out6 * oy + out10 * oz);\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Calculates a 4x4 matrix from the given quaternion\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {ReadonlyQuat} q Quaternion to create matrix from\r\n *\r\n * @returns {mat4} out\r\n */\n\nexport function fromQuat(out, q) {\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var yx = y * x2;\n  var yy = y * y2;\n  var zx = z * x2;\n  var zy = z * y2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - yy - zz;\n  out[1] = yx + wz;\n  out[2] = zx - wy;\n  out[3] = 0;\n  out[4] = yx - wz;\n  out[5] = 1 - xx - zz;\n  out[6] = zy + wx;\n  out[7] = 0;\n  out[8] = zx + wy;\n  out[9] = zy - wx;\n  out[10] = 1 - xx - yy;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Generates a frustum matrix with the given bounds\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {Number} left Left bound of the frustum\r\n * @param {Number} right Right bound of the frustum\r\n * @param {Number} bottom Bottom bound of the frustum\r\n * @param {Number} top Top bound of the frustum\r\n * @param {Number} near Near bound of the frustum\r\n * @param {Number} far Far bound of the frustum\r\n * @returns {mat4} out\r\n */\n\nexport function frustum(out, left, right, bottom, top, near, far) {\n  var rl = 1 / (right - left);\n  var tb = 1 / (top - bottom);\n  var nf = 1 / (near - far);\n  out[0] = near * 2 * rl;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = near * 2 * tb;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = (right + left) * rl;\n  out[9] = (top + bottom) * tb;\n  out[10] = (far + near) * nf;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = far * near * 2 * nf;\n  out[15] = 0;\n  return out;\n}\n/**\r\n * Generates a perspective projection matrix with the given bounds.\r\n * Passing null/undefined/no value for far will generate infinite projection matrix.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {number} fovy Vertical field of view in radians\r\n * @param {number} aspect Aspect ratio. typically viewport width/height\r\n * @param {number} near Near bound of the frustum\r\n * @param {number} far Far bound of the frustum, can be null or Infinity\r\n * @returns {mat4} out\r\n */\n\nexport function perspective(out, fovy, aspect, near, far) {\n  var f = 1.0 / Math.tan(fovy / 2),\n      nf;\n  out[0] = f / aspect;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = f;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[15] = 0;\n\n  if (far != null && far !== Infinity) {\n    nf = 1 / (near - far);\n    out[10] = (far + near) * nf;\n    out[14] = 2 * far * near * nf;\n  } else {\n    out[10] = -1;\n    out[14] = -2 * near;\n  }\n\n  return out;\n}\n/**\r\n * Generates a perspective projection matrix with the given field of view.\r\n * This is primarily useful for generating projection matrices to be used\r\n * with the still experiemental WebVR API.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {Object} fov Object containing the following values: upDegrees, downDegrees, leftDegrees, rightDegrees\r\n * @param {number} near Near bound of the frustum\r\n * @param {number} far Far bound of the frustum\r\n * @returns {mat4} out\r\n */\n\nexport function perspectiveFromFieldOfView(out, fov, near, far) {\n  var upTan = Math.tan(fov.upDegrees * Math.PI / 180.0);\n  var downTan = Math.tan(fov.downDegrees * Math.PI / 180.0);\n  var leftTan = Math.tan(fov.leftDegrees * Math.PI / 180.0);\n  var rightTan = Math.tan(fov.rightDegrees * Math.PI / 180.0);\n  var xScale = 2.0 / (leftTan + rightTan);\n  var yScale = 2.0 / (upTan + downTan);\n  out[0] = xScale;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  out[3] = 0.0;\n  out[4] = 0.0;\n  out[5] = yScale;\n  out[6] = 0.0;\n  out[7] = 0.0;\n  out[8] = -((leftTan - rightTan) * xScale * 0.5);\n  out[9] = (upTan - downTan) * yScale * 0.5;\n  out[10] = far / (near - far);\n  out[11] = -1.0;\n  out[12] = 0.0;\n  out[13] = 0.0;\n  out[14] = far * near / (near - far);\n  out[15] = 0.0;\n  return out;\n}\n/**\r\n * Generates a orthogonal projection matrix with the given bounds\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {number} left Left bound of the frustum\r\n * @param {number} right Right bound of the frustum\r\n * @param {number} bottom Bottom bound of the frustum\r\n * @param {number} top Top bound of the frustum\r\n * @param {number} near Near bound of the frustum\r\n * @param {number} far Far bound of the frustum\r\n * @returns {mat4} out\r\n */\n\nexport function ortho(out, left, right, bottom, top, near, far) {\n  var lr = 1 / (left - right);\n  var bt = 1 / (bottom - top);\n  var nf = 1 / (near - far);\n  out[0] = -2 * lr;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = -2 * bt;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 2 * nf;\n  out[11] = 0;\n  out[12] = (left + right) * lr;\n  out[13] = (top + bottom) * bt;\n  out[14] = (far + near) * nf;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Generates a look-at matrix with the given eye position, focal point, and up axis.\r\n * If you want a matrix that actually makes an object look at another object, you should use targetTo instead.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {ReadonlyVec3} eye Position of the viewer\r\n * @param {ReadonlyVec3} center Point the viewer is looking at\r\n * @param {ReadonlyVec3} up vec3 pointing up\r\n * @returns {mat4} out\r\n */\n\nexport function lookAt(out, eye, center, up) {\n  var x0, x1, x2, y0, y1, y2, z0, z1, z2, len;\n  var eyex = eye[0];\n  var eyey = eye[1];\n  var eyez = eye[2];\n  var upx = up[0];\n  var upy = up[1];\n  var upz = up[2];\n  var centerx = center[0];\n  var centery = center[1];\n  var centerz = center[2];\n\n  if (Math.abs(eyex - centerx) < glMatrix.EPSILON && Math.abs(eyey - centery) < glMatrix.EPSILON && Math.abs(eyez - centerz) < glMatrix.EPSILON) {\n    return identity(out);\n  }\n\n  z0 = eyex - centerx;\n  z1 = eyey - centery;\n  z2 = eyez - centerz;\n  len = 1 / Math.hypot(z0, z1, z2);\n  z0 *= len;\n  z1 *= len;\n  z2 *= len;\n  x0 = upy * z2 - upz * z1;\n  x1 = upz * z0 - upx * z2;\n  x2 = upx * z1 - upy * z0;\n  len = Math.hypot(x0, x1, x2);\n\n  if (!len) {\n    x0 = 0;\n    x1 = 0;\n    x2 = 0;\n  } else {\n    len = 1 / len;\n    x0 *= len;\n    x1 *= len;\n    x2 *= len;\n  }\n\n  y0 = z1 * x2 - z2 * x1;\n  y1 = z2 * x0 - z0 * x2;\n  y2 = z0 * x1 - z1 * x0;\n  len = Math.hypot(y0, y1, y2);\n\n  if (!len) {\n    y0 = 0;\n    y1 = 0;\n    y2 = 0;\n  } else {\n    len = 1 / len;\n    y0 *= len;\n    y1 *= len;\n    y2 *= len;\n  }\n\n  out[0] = x0;\n  out[1] = y0;\n  out[2] = z0;\n  out[3] = 0;\n  out[4] = x1;\n  out[5] = y1;\n  out[6] = z1;\n  out[7] = 0;\n  out[8] = x2;\n  out[9] = y2;\n  out[10] = z2;\n  out[11] = 0;\n  out[12] = -(x0 * eyex + x1 * eyey + x2 * eyez);\n  out[13] = -(y0 * eyex + y1 * eyey + y2 * eyez);\n  out[14] = -(z0 * eyex + z1 * eyey + z2 * eyez);\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Generates a matrix that makes something look at something else.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {ReadonlyVec3} eye Position of the viewer\r\n * @param {ReadonlyVec3} center Point the viewer is looking at\r\n * @param {ReadonlyVec3} up vec3 pointing up\r\n * @returns {mat4} out\r\n */\n\nexport function targetTo(out, eye, target, up) {\n  var eyex = eye[0],\n      eyey = eye[1],\n      eyez = eye[2],\n      upx = up[0],\n      upy = up[1],\n      upz = up[2];\n  var z0 = eyex - target[0],\n      z1 = eyey - target[1],\n      z2 = eyez - target[2];\n  var len = z0 * z0 + z1 * z1 + z2 * z2;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n    z0 *= len;\n    z1 *= len;\n    z2 *= len;\n  }\n\n  var x0 = upy * z2 - upz * z1,\n      x1 = upz * z0 - upx * z2,\n      x2 = upx * z1 - upy * z0;\n  len = x0 * x0 + x1 * x1 + x2 * x2;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n    x0 *= len;\n    x1 *= len;\n    x2 *= len;\n  }\n\n  out[0] = x0;\n  out[1] = x1;\n  out[2] = x2;\n  out[3] = 0;\n  out[4] = z1 * x2 - z2 * x1;\n  out[5] = z2 * x0 - z0 * x2;\n  out[6] = z0 * x1 - z1 * x0;\n  out[7] = 0;\n  out[8] = z0;\n  out[9] = z1;\n  out[10] = z2;\n  out[11] = 0;\n  out[12] = eyex;\n  out[13] = eyey;\n  out[14] = eyez;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Returns a string representation of a mat4\r\n *\r\n * @param {ReadonlyMat4} a matrix to represent as a string\r\n * @returns {String} string representation of the matrix\r\n */\n\nexport function str(a) {\n  return \"mat4(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \", \" + a[4] + \", \" + a[5] + \", \" + a[6] + \", \" + a[7] + \", \" + a[8] + \", \" + a[9] + \", \" + a[10] + \", \" + a[11] + \", \" + a[12] + \", \" + a[13] + \", \" + a[14] + \", \" + a[15] + \")\";\n}\n/**\r\n * Returns Frobenius norm of a mat4\r\n *\r\n * @param {ReadonlyMat4} a the matrix to calculate Frobenius norm of\r\n * @returns {Number} Frobenius norm\r\n */\n\nexport function frob(a) {\n  return Math.hypot(a[0], a[1], a[2], a[3], a[4], a[5], a[6], a[7], a[8], a[9], a[10], a[11], a[12], a[13], a[14], a[15]);\n}\n/**\r\n * Adds two mat4's\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the first operand\r\n * @param {ReadonlyMat4} b the second operand\r\n * @returns {mat4} out\r\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  out[6] = a[6] + b[6];\n  out[7] = a[7] + b[7];\n  out[8] = a[8] + b[8];\n  out[9] = a[9] + b[9];\n  out[10] = a[10] + b[10];\n  out[11] = a[11] + b[11];\n  out[12] = a[12] + b[12];\n  out[13] = a[13] + b[13];\n  out[14] = a[14] + b[14];\n  out[15] = a[15] + b[15];\n  return out;\n}\n/**\r\n * Subtracts matrix b from matrix a\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the first operand\r\n * @param {ReadonlyMat4} b the second operand\r\n * @returns {mat4} out\r\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  out[4] = a[4] - b[4];\n  out[5] = a[5] - b[5];\n  out[6] = a[6] - b[6];\n  out[7] = a[7] - b[7];\n  out[8] = a[8] - b[8];\n  out[9] = a[9] - b[9];\n  out[10] = a[10] - b[10];\n  out[11] = a[11] - b[11];\n  out[12] = a[12] - b[12];\n  out[13] = a[13] - b[13];\n  out[14] = a[14] - b[14];\n  out[15] = a[15] - b[15];\n  return out;\n}\n/**\r\n * Multiply each element of the matrix by a scalar.\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the matrix to scale\r\n * @param {Number} b amount to scale the matrix's elements by\r\n * @returns {mat4} out\r\n */\n\nexport function multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  out[6] = a[6] * b;\n  out[7] = a[7] * b;\n  out[8] = a[8] * b;\n  out[9] = a[9] * b;\n  out[10] = a[10] * b;\n  out[11] = a[11] * b;\n  out[12] = a[12] * b;\n  out[13] = a[13] * b;\n  out[14] = a[14] * b;\n  out[15] = a[15] * b;\n  return out;\n}\n/**\r\n * Adds two mat4's after multiplying each element of the second operand by a scalar value.\r\n *\r\n * @param {mat4} out the receiving vector\r\n * @param {ReadonlyMat4} a the first operand\r\n * @param {ReadonlyMat4} b the second operand\r\n * @param {Number} scale the amount to scale b's elements by before adding\r\n * @returns {mat4} out\r\n */\n\nexport function multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  out[4] = a[4] + b[4] * scale;\n  out[5] = a[5] + b[5] * scale;\n  out[6] = a[6] + b[6] * scale;\n  out[7] = a[7] + b[7] * scale;\n  out[8] = a[8] + b[8] * scale;\n  out[9] = a[9] + b[9] * scale;\n  out[10] = a[10] + b[10] * scale;\n  out[11] = a[11] + b[11] * scale;\n  out[12] = a[12] + b[12] * scale;\n  out[13] = a[13] + b[13] * scale;\n  out[14] = a[14] + b[14] * scale;\n  out[15] = a[15] + b[15] * scale;\n  return out;\n}\n/**\r\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {ReadonlyMat4} a The first matrix.\r\n * @param {ReadonlyMat4} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7] && a[8] === b[8] && a[9] === b[9] && a[10] === b[10] && a[11] === b[11] && a[12] === b[12] && a[13] === b[13] && a[14] === b[14] && a[15] === b[15];\n}\n/**\r\n * Returns whether or not the matrices have approximately the same elements in the same position.\r\n *\r\n * @param {ReadonlyMat4} a The first matrix.\r\n * @param {ReadonlyMat4} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var a4 = a[4],\n      a5 = a[5],\n      a6 = a[6],\n      a7 = a[7];\n  var a8 = a[8],\n      a9 = a[9],\n      a10 = a[10],\n      a11 = a[11];\n  var a12 = a[12],\n      a13 = a[13],\n      a14 = a[14],\n      a15 = a[15];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  var b4 = b[4],\n      b5 = b[5],\n      b6 = b[6],\n      b7 = b[7];\n  var b8 = b[8],\n      b9 = b[9],\n      b10 = b[10],\n      b11 = b[11];\n  var b12 = b[12],\n      b13 = b[13],\n      b14 = b[14],\n      b15 = b[15];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7)) && Math.abs(a8 - b8) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a8), Math.abs(b8)) && Math.abs(a9 - b9) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a9), Math.abs(b9)) && Math.abs(a10 - b10) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a10), Math.abs(b10)) && Math.abs(a11 - b11) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a11), Math.abs(b11)) && Math.abs(a12 - b12) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a12), Math.abs(b12)) && Math.abs(a13 - b13) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a13), Math.abs(b13)) && Math.abs(a14 - b14) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a14), Math.abs(b14)) && Math.abs(a15 - b15) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a15), Math.abs(b15));\n}\n/**\r\n * Alias for {@link mat4.multiply}\r\n * @function\r\n */\n\nexport var mul = multiply;\n/**\r\n * Alias for {@link mat4.subtract}\r\n * @function\r\n */\n\nexport var sub = subtract;","import * as glMatrix from \"./common.js\";\n/**\r\n * 3 Dimensional Vector\r\n * @module vec3\r\n */\n\n/**\r\n * Creates a new, empty vec3\r\n *\r\n * @returns {vec3} a new 3D vector\r\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(3);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n  }\n\n  return out;\n}\n/**\r\n * Creates a new vec3 initialized with values from an existing vector\r\n *\r\n * @param {ReadonlyVec3} a vector to clone\r\n * @returns {vec3} a new 3D vector\r\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(3);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  return out;\n}\n/**\r\n * Calculates the length of a vec3\r\n *\r\n * @param {ReadonlyVec3} a vector to calculate length of\r\n * @returns {Number} length of a\r\n */\n\nexport function length(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  return Math.hypot(x, y, z);\n}\n/**\r\n * Creates a new vec3 initialized with the given values\r\n *\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @returns {vec3} a new 3D vector\r\n */\n\nexport function fromValues(x, y, z) {\n  var out = new glMatrix.ARRAY_TYPE(3);\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  return out;\n}\n/**\r\n * Copy the values from one vec3 to another\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the source vector\r\n * @returns {vec3} out\r\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  return out;\n}\n/**\r\n * Set the components of a vec3 to the given values\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @returns {vec3} out\r\n */\n\nexport function set(out, x, y, z) {\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  return out;\n}\n/**\r\n * Adds two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  return out;\n}\n/**\r\n * Subtracts vector b from vector a\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  return out;\n}\n/**\r\n * Multiplies two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nexport function multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  out[2] = a[2] * b[2];\n  return out;\n}\n/**\r\n * Divides two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nexport function divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  out[2] = a[2] / b[2];\n  return out;\n}\n/**\r\n * Math.ceil the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a vector to ceil\r\n * @returns {vec3} out\r\n */\n\nexport function ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  out[2] = Math.ceil(a[2]);\n  return out;\n}\n/**\r\n * Math.floor the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a vector to floor\r\n * @returns {vec3} out\r\n */\n\nexport function floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  out[2] = Math.floor(a[2]);\n  return out;\n}\n/**\r\n * Returns the minimum of two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nexport function min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  out[2] = Math.min(a[2], b[2]);\n  return out;\n}\n/**\r\n * Returns the maximum of two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nexport function max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  out[2] = Math.max(a[2], b[2]);\n  return out;\n}\n/**\r\n * Math.round the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a vector to round\r\n * @returns {vec3} out\r\n */\n\nexport function round(out, a) {\n  out[0] = Math.round(a[0]);\n  out[1] = Math.round(a[1]);\n  out[2] = Math.round(a[2]);\n  return out;\n}\n/**\r\n * Scales a vec3 by a scalar number\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the vector to scale\r\n * @param {Number} b amount to scale the vector by\r\n * @returns {vec3} out\r\n */\n\nexport function scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  return out;\n}\n/**\r\n * Adds two vec3's after scaling the second operand by a scalar value\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @param {Number} scale the amount to scale b by before adding\r\n * @returns {vec3} out\r\n */\n\nexport function scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  return out;\n}\n/**\r\n * Calculates the euclidian distance between two vec3's\r\n *\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {Number} distance between a and b\r\n */\n\nexport function distance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  return Math.hypot(x, y, z);\n}\n/**\r\n * Calculates the squared euclidian distance between two vec3's\r\n *\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {Number} squared distance between a and b\r\n */\n\nexport function squaredDistance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  return x * x + y * y + z * z;\n}\n/**\r\n * Calculates the squared length of a vec3\r\n *\r\n * @param {ReadonlyVec3} a vector to calculate squared length of\r\n * @returns {Number} squared length of a\r\n */\n\nexport function squaredLength(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  return x * x + y * y + z * z;\n}\n/**\r\n * Negates the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a vector to negate\r\n * @returns {vec3} out\r\n */\n\nexport function negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  return out;\n}\n/**\r\n * Returns the inverse of the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a vector to invert\r\n * @returns {vec3} out\r\n */\n\nexport function inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  out[2] = 1.0 / a[2];\n  return out;\n}\n/**\r\n * Normalize a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a vector to normalize\r\n * @returns {vec3} out\r\n */\n\nexport function normalize(out, a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var len = x * x + y * y + z * z;\n\n  if (len > 0) {\n    //TODO: evaluate use of glm_invsqrt here?\n    len = 1 / Math.sqrt(len);\n  }\n\n  out[0] = a[0] * len;\n  out[1] = a[1] * len;\n  out[2] = a[2] * len;\n  return out;\n}\n/**\r\n * Calculates the dot product of two vec3's\r\n *\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {Number} dot product of a and b\r\n */\n\nexport function dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n/**\r\n * Computes the cross product of two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nexport function cross(out, a, b) {\n  var ax = a[0],\n      ay = a[1],\n      az = a[2];\n  var bx = b[0],\n      by = b[1],\n      bz = b[2];\n  out[0] = ay * bz - az * by;\n  out[1] = az * bx - ax * bz;\n  out[2] = ax * by - ay * bx;\n  return out;\n}\n/**\r\n * Performs a linear interpolation between two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec3} out\r\n */\n\nexport function lerp(out, a, b, t) {\n  var ax = a[0];\n  var ay = a[1];\n  var az = a[2];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  out[2] = az + t * (b[2] - az);\n  return out;\n}\n/**\r\n * Performs a hermite interpolation with two control points\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @param {ReadonlyVec3} c the third operand\r\n * @param {ReadonlyVec3} d the fourth operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec3} out\r\n */\n\nexport function hermite(out, a, b, c, d, t) {\n  var factorTimes2 = t * t;\n  var factor1 = factorTimes2 * (2 * t - 3) + 1;\n  var factor2 = factorTimes2 * (t - 2) + t;\n  var factor3 = factorTimes2 * (t - 1);\n  var factor4 = factorTimes2 * (3 - 2 * t);\n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\n  return out;\n}\n/**\r\n * Performs a bezier interpolation with two control points\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @param {ReadonlyVec3} c the third operand\r\n * @param {ReadonlyVec3} d the fourth operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec3} out\r\n */\n\nexport function bezier(out, a, b, c, d, t) {\n  var inverseFactor = 1 - t;\n  var inverseFactorTimesTwo = inverseFactor * inverseFactor;\n  var factorTimes2 = t * t;\n  var factor1 = inverseFactorTimesTwo * inverseFactor;\n  var factor2 = 3 * t * inverseFactorTimesTwo;\n  var factor3 = 3 * factorTimes2 * inverseFactor;\n  var factor4 = factorTimes2 * t;\n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\n  return out;\n}\n/**\r\n * Generates a random vector with the given scale\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\r\n * @returns {vec3} out\r\n */\n\nexport function random(out, scale) {\n  scale = scale || 1.0;\n  var r = glMatrix.RANDOM() * 2.0 * Math.PI;\n  var z = glMatrix.RANDOM() * 2.0 - 1.0;\n  var zScale = Math.sqrt(1.0 - z * z) * scale;\n  out[0] = Math.cos(r) * zScale;\n  out[1] = Math.sin(r) * zScale;\n  out[2] = z * scale;\n  return out;\n}\n/**\r\n * Transforms the vec3 with a mat4.\r\n * 4th vector component is implicitly '1'\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the vector to transform\r\n * @param {ReadonlyMat4} m matrix to transform with\r\n * @returns {vec3} out\r\n */\n\nexport function transformMat4(out, a, m) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  var w = m[3] * x + m[7] * y + m[11] * z + m[15];\n  w = w || 1.0;\n  out[0] = (m[0] * x + m[4] * y + m[8] * z + m[12]) / w;\n  out[1] = (m[1] * x + m[5] * y + m[9] * z + m[13]) / w;\n  out[2] = (m[2] * x + m[6] * y + m[10] * z + m[14]) / w;\n  return out;\n}\n/**\r\n * Transforms the vec3 with a mat3.\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the vector to transform\r\n * @param {ReadonlyMat3} m the 3x3 matrix to transform with\r\n * @returns {vec3} out\r\n */\n\nexport function transformMat3(out, a, m) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  out[0] = x * m[0] + y * m[3] + z * m[6];\n  out[1] = x * m[1] + y * m[4] + z * m[7];\n  out[2] = x * m[2] + y * m[5] + z * m[8];\n  return out;\n}\n/**\r\n * Transforms the vec3 with a quat\r\n * Can also be used for dual quaternions. (Multiply it with the real part)\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the vector to transform\r\n * @param {ReadonlyQuat} q quaternion to transform with\r\n * @returns {vec3} out\r\n */\n\nexport function transformQuat(out, a, q) {\n  // benchmarks: https://jsperf.com/quaternion-transform-vec3-implementations-fixed\n  var qx = q[0],\n      qy = q[1],\n      qz = q[2],\n      qw = q[3];\n  var x = a[0],\n      y = a[1],\n      z = a[2]; // var qvec = [qx, qy, qz];\n  // var uv = vec3.cross([], qvec, a);\n\n  var uvx = qy * z - qz * y,\n      uvy = qz * x - qx * z,\n      uvz = qx * y - qy * x; // var uuv = vec3.cross([], qvec, uv);\n\n  var uuvx = qy * uvz - qz * uvy,\n      uuvy = qz * uvx - qx * uvz,\n      uuvz = qx * uvy - qy * uvx; // vec3.scale(uv, uv, 2 * w);\n\n  var w2 = qw * 2;\n  uvx *= w2;\n  uvy *= w2;\n  uvz *= w2; // vec3.scale(uuv, uuv, 2);\n\n  uuvx *= 2;\n  uuvy *= 2;\n  uuvz *= 2; // return vec3.add(out, a, vec3.add(out, uv, uuv));\n\n  out[0] = x + uvx + uuvx;\n  out[1] = y + uvy + uuvy;\n  out[2] = z + uvz + uuvz;\n  return out;\n}\n/**\r\n * Rotate a 3D vector around the x-axis\r\n * @param {vec3} out The receiving vec3\r\n * @param {ReadonlyVec3} a The vec3 point to rotate\r\n * @param {ReadonlyVec3} b The origin of the rotation\r\n * @param {Number} rad The angle of rotation in radians\r\n * @returns {vec3} out\r\n */\n\nexport function rotateX(out, a, b, rad) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[0];\n  r[1] = p[1] * Math.cos(rad) - p[2] * Math.sin(rad);\n  r[2] = p[1] * Math.sin(rad) + p[2] * Math.cos(rad); //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\r\n * Rotate a 3D vector around the y-axis\r\n * @param {vec3} out The receiving vec3\r\n * @param {ReadonlyVec3} a The vec3 point to rotate\r\n * @param {ReadonlyVec3} b The origin of the rotation\r\n * @param {Number} rad The angle of rotation in radians\r\n * @returns {vec3} out\r\n */\n\nexport function rotateY(out, a, b, rad) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[2] * Math.sin(rad) + p[0] * Math.cos(rad);\n  r[1] = p[1];\n  r[2] = p[2] * Math.cos(rad) - p[0] * Math.sin(rad); //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\r\n * Rotate a 3D vector around the z-axis\r\n * @param {vec3} out The receiving vec3\r\n * @param {ReadonlyVec3} a The vec3 point to rotate\r\n * @param {ReadonlyVec3} b The origin of the rotation\r\n * @param {Number} rad The angle of rotation in radians\r\n * @returns {vec3} out\r\n */\n\nexport function rotateZ(out, a, b, rad) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[0] * Math.cos(rad) - p[1] * Math.sin(rad);\n  r[1] = p[0] * Math.sin(rad) + p[1] * Math.cos(rad);\n  r[2] = p[2]; //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\r\n * Get the angle between two 3D vectors\r\n * @param {ReadonlyVec3} a The first operand\r\n * @param {ReadonlyVec3} b The second operand\r\n * @returns {Number} The angle in radians\r\n */\n\nexport function angle(a, b) {\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      bx = b[0],\n      by = b[1],\n      bz = b[2],\n      mag1 = Math.sqrt(ax * ax + ay * ay + az * az),\n      mag2 = Math.sqrt(bx * bx + by * by + bz * bz),\n      mag = mag1 * mag2,\n      cosine = mag && dot(a, b) / mag;\n  return Math.acos(Math.min(Math.max(cosine, -1), 1));\n}\n/**\r\n * Set the components of a vec3 to zero\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @returns {vec3} out\r\n */\n\nexport function zero(out) {\n  out[0] = 0.0;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  return out;\n}\n/**\r\n * Returns a string representation of a vector\r\n *\r\n * @param {ReadonlyVec3} a vector to represent as a string\r\n * @returns {String} string representation of the vector\r\n */\n\nexport function str(a) {\n  return \"vec3(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \")\";\n}\n/**\r\n * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {ReadonlyVec3} a The first vector.\r\n * @param {ReadonlyVec3} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2];\n}\n/**\r\n * Returns whether or not the vectors have approximately the same elements in the same position.\r\n *\r\n * @param {ReadonlyVec3} a The first vector.\r\n * @param {ReadonlyVec3} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2));\n}\n/**\r\n * Alias for {@link vec3.subtract}\r\n * @function\r\n */\n\nexport var sub = subtract;\n/**\r\n * Alias for {@link vec3.multiply}\r\n * @function\r\n */\n\nexport var mul = multiply;\n/**\r\n * Alias for {@link vec3.divide}\r\n * @function\r\n */\n\nexport var div = divide;\n/**\r\n * Alias for {@link vec3.distance}\r\n * @function\r\n */\n\nexport var dist = distance;\n/**\r\n * Alias for {@link vec3.squaredDistance}\r\n * @function\r\n */\n\nexport var sqrDist = squaredDistance;\n/**\r\n * Alias for {@link vec3.length}\r\n * @function\r\n */\n\nexport var len = length;\n/**\r\n * Alias for {@link vec3.squaredLength}\r\n * @function\r\n */\n\nexport var sqrLen = squaredLength;\n/**\r\n * Perform some operation over an array of vec3s.\r\n *\r\n * @param {Array} a the array of vectors to iterate over\r\n * @param {Number} stride Number of elements between the start of each vec3. If 0 assumes tightly packed\r\n * @param {Number} offset Number of elements to skip at the beginning of the array\r\n * @param {Number} count Number of vec3s to iterate over. If 0 iterates over entire array\r\n * @param {Function} fn Function to call for each vector in the array\r\n * @param {Object} [arg] additional argument to pass to fn\r\n * @returns {Array} a\r\n * @function\r\n */\n\nexport var forEach = function () {\n  var vec = create();\n  return function (a, stride, offset, count, fn, arg) {\n    var i, l;\n\n    if (!stride) {\n      stride = 3;\n    }\n\n    if (!offset) {\n      offset = 0;\n    }\n\n    if (count) {\n      l = Math.min(count * stride + offset, a.length);\n    } else {\n      l = a.length;\n    }\n\n    for (i = offset; i < l; i += stride) {\n      vec[0] = a[i];\n      vec[1] = a[i + 1];\n      vec[2] = a[i + 2];\n      fn(vec, vec, arg);\n      a[i] = vec[0];\n      a[i + 1] = vec[1];\n      a[i + 2] = vec[2];\n    }\n\n    return a;\n  };\n}();","export class CumulativeDistributionFunction\r\n{\r\n    public constructor() {\r\n    }\r\n\r\n    public probFromVal(fVal : number) : number\r\n    {\r\n        if (fVal < this.min || fVal > this.max)\r\n\t\t    throw new Error(\"out of range\");\r\n\r\n    \tlet h : number = 2 * ((this.max - this.min) / this.steps);\r\n\t    let i : number = ((fVal - this.min) / h);\r\n\t    let remainder : number = fVal - i * h;\r\n\r\n\t    return (this.y1[i] + this.m1[i] * remainder);\r\n    }\r\n\r\n    public valFromProb(fVal : number) : number\r\n    {\r\n        if (fVal < 0 || fVal>1)\r\n\t\t    throw new Error(\"out of range\");\r\n\r\n\t    let h : number  = 1.0 / (this.y2.length - 1);\r\n\t    let i : number = Math.floor(fVal / h);\r\n\t    let remainder = fVal - i * h;\r\n\r\n    \treturn (this.y2[i] + this.m2[i] * remainder);\r\n    }\r\n\r\n    public setupRealistic(\r\n        i0 : number, \r\n        k : number, \r\n        a : number, \r\n        rad_bulge : number, \r\n        min : number, \r\n        max : number, \r\n        nsteps : number) : void\r\n    {\r\n        this.min = min;\r\n        this.max = max;\r\n        this.steps = nsteps;\r\n    \r\n        this.i0 = i0;\r\n        this.k = k;\r\n        this.a = a;\r\n        this.r_bulge = rad_bulge;\r\n    \r\n        this.buildCdf(nsteps);\r\n    }\r\n\r\n\tprivate min : number = 0;\r\n\tprivate max : number = 0;\r\n\tprivate width : number = 0;\r\n\tprivate steps : number = 0;\r\n\r\n\tprivate i0: number = 0;\r\n\tprivate k: number = 0;\r\n\tprivate a: number = 0;\r\n\tprivate r_bulge: number = 0;\r\n\r\n\tprivate m1 : number[] = [];\r\n\tprivate y1 : number[] = [];\r\n\tprivate x1 : number[] = [];\r\n\r\n\tprivate m2 : number[] = [];\r\n\tprivate y2 : number[] = [];\r\n\tprivate x2 : number[] = [];\r\n\r\n    private buildCdf(nsteps : number) : void\r\n    {\r\n        let h : number = (this.max - this.min) / this.steps;\r\n        let x : number = 0;\r\n        let y : number = 0;\r\n    \r\n        this.x1 = [];\r\n        this.y1 = [];\r\n        this.x2 = [];\r\n        this.y2 = [];\r\n        this.m1 = [];\r\n        this.m2 = [];\r\n    \r\n        // Simpson rule for integration of the distribution function\r\n        this.y1.push(0.0);\r\n        this.x1.push(0.0);\r\n        for (let i = 0; i < this.steps; i += 2) {\r\n            x = h * (i + 2);\r\n            y += h / 3 * (this.intensity(this.min + i * h) + 4 * this.intensity(this.min + (i + 1) * h) + this.intensity(this.min + (i + 2) * h));\r\n    \r\n            this.m1.push((y - this.y1[this.y1.length-1]) / (2 * h));\r\n            this.x1.push(x);\r\n            this.y1.push(y);\r\n    \r\n            //    printf(\"%2.2f, %2.2f, %2.2f\\n\", m_fMin + (i+2) * h, v, h);\r\n        }\r\n        this.m1.push(0.0);\r\n    \r\n        // all arrays must have the same length\r\n        if (this.m1.length != this.x1.length || this.m1.length != this.y1.length)\r\n            throw new Error(\"CumulativeDistributionFunction::BuildCDF: array size mismatch (1)!\");\r\n    \r\n        // normieren\r\n        for (let i = 0; i < this.y1.length; ++i)\r\n        {\r\n            this.y1[i] /= this.y1[this.y1.length-1];\r\n            this.m1[i] /= this.y1[this.y1.length-1];\r\n        }\r\n    \r\n        this.x2.push(0.0);\r\n        this.y2.push(0.0);\r\n    \r\n        let p : number = 0;\r\n        h = 1.0 / nsteps;\r\n        for (let i = 1, k = 0; i < nsteps; ++i)\r\n        {\r\n            p = i * h;\r\n    \r\n            for (; this.y1[k + 1] <= p; ++k)\r\n            {\r\n            }\r\n    \r\n    \r\n            y = this.x1[k] + (p - this.y1[k]) / this.m1[k];\r\n    \r\n            //    printf(\"%2.4f, %2.4f, k=%d, %2.4f, %2.4f\\n\", p, y, k, m_vY1[k], m_vM1[k]);\r\n    \r\n            this.m2.push((y - this.y2[this.y2.length-1]) / h);\r\n            this.x2.push(p);\r\n            this.y2.push(y);\r\n        }\r\n        this.m2.push(0.0);\r\n    \r\n        // all arrays must have the same length\r\n        if (this.m2.length != this.x2.length || this.m2.length != this.y2.length)\r\n            throw new Error(\"CumulativeDistributionFunction::BuildCDF: array size mismatch (1)!\");\r\n    }\r\n\r\n    private intensityBulge(r : number, i0 : number, k : number) : number\r\n    {\r\n        return i0 * Math.exp(-k * Math.pow(r, 0.25));\r\n    }\r\n    \r\n    private intensityDisc(r : number, i0 : number, a : number) : number\r\n    {\r\n        return i0 * Math.exp(-r / a);\r\n    }\r\n\r\n    private intensity(x : number) : number\r\n    {\r\n        return (x < this.r_bulge) \r\n            ? this.intensityBulge(x, this.i0, this.k) \r\n            : this.intensityDisc(x - this.r_bulge, this.intensityBulge(this.r_bulge, this.i0, this.k), this.a);\r\n    }\r\n};\r\n","import { Star, GalaxyParam } from './Types'\r\nimport { Helper } from './Helper'\r\nimport { CumulativeDistributionFunction } from './CumulativeDistributionFunction'\r\n\r\nexport class Galaxy {\r\n\r\n    private _stars : Star[] = [];\r\n\tprivate _elEx1 : number = 0;\r\n\tprivate _elEx2 : number = 0;\r\n\r\n\tprivate _angleOffset : number = 0;\r\n\r\n    private _radCore : number = 0;\r\n\tprivate _radGalaxy : number = 0;\r\n\tprivate _radFarField : number = 0;\r\n  \r\n    private _dustRenderSize : number = 0;\r\n\r\n\tprivate _numStars : number = 0;\r\n\tprivate _numH2 : number = 0;\r\n\r\n\tprivate _pertN : number = 0;\r\n\tprivate _pertAmp : number = 0;\r\n\r\n\tprivate _hasDarkMatter : boolean = true;\r\n\tprivate _baseTemp : number = 0;\r\n\r\n\r\n    constructor(\r\n            rad : number = 15000,\r\n            radCore : number = 6000,\r\n            deltaAng : number = 0.019,\r\n            ex1 : number = 0.8,\r\n            ex2 : number = 1,\r\n            numStars : number = 60000)\r\n    {\r\n        this._elEx1 = ex1\r\n        this._elEx2 = ex2\r\n        this._angleOffset = deltaAng\r\n        this._radCore = radCore\r\n        this._radGalaxy = rad\r\n        this._radFarField = rad * 2\r\n        this._numStars =  numStars\r\n        this._numH2 = 400\r\n        this._pertN = 0\r\n        this._pertAmp = 0\r\n        this._hasDarkMatter = true\r\n        this._baseTemp = 4000\r\n        this._stars = []\r\n        this._dustRenderSize = 70\r\n    }\r\n\r\n    private initStarsAndDust() : void\r\n    {\r\n        this._stars = [];\r\n    \r\n        // First star ist the black hole at the centre\r\n        let star : Star = {\r\n            \"a\" : 0,\r\n            \"b\" : 0,\r\n            \"tiltAngle\" : 0,\r\n            \"theta0\" : 0,\r\n            \"velTheta\" : 0,\r\n            \"type\" : 0,\r\n            \"temp\" : 6000, \r\n            \"mag\" : 1\r\n        };\r\n\r\n        this._stars.push(star);\r\n    \r\n        //\r\n        // 1.) Initialize the stars\r\n        //\r\n    \r\n        let cdf : CumulativeDistributionFunction = new CumulativeDistributionFunction();\r\n        cdf.setupRealistic(\r\n            1.0,\t\t\t\t    // maximum intensity\r\n            0.02,\t\t\t\t    // k (bulge)\r\n            this._radGalaxy / 3.0,\t// disc scale length\r\n            this._radCore,\t\t\t// bulge radius\r\n            0,\t\t\t\t\t    // start  of the intnesity curve\r\n            this._radFarField,\t\t// end of the intensity curve\r\n            1000);\t\t\t\t    // number of supporting points\r\n\r\n        for (let i = 1; i < this._numStars; ++i)\r\n        {\r\n            let rad : number = cdf.valFromProb(Helper.rnum());\r\n            let star = new Star();\r\n            star.a = rad;\r\n            star.b = rad * this.getExcentricity(rad);\r\n            star.tiltAngle = this.getAngularOffset(rad);\r\n            star.theta0 = 360.0 * Helper.rnum();\r\n            star.velTheta = this.getOrbitalVelocity(rad);\r\n            star.temp = 6000 + (4000 * Helper.rnum() - 2000);\r\n            star.mag = 0.1 + 0.4 * Helper.rnum();\r\n            star.type = 0;\r\n    \r\n            // Make a small portion of the stars brighter\r\n            if (i < this._numStars / 60)\r\n            {\r\n                star.mag = Math.min(star.mag + 0.1 + Helper.rnum() * 0.4, 1.0);\r\n            }\r\n    \r\n            this._stars.push(star);\r\n        }\r\n    \r\n        //\r\n        // 2.) Initialise Dust:\r\n        //\r\n        //\tThe galaxy gets as many dust clouds as stars\r\n    \r\n        let x : number = 0;\r\n        let y : number = 0;\r\n        let rad : number = 0;\r\n        for (let i = 0; i < this._numStars; ++i)\r\n        {\r\n            if (i % 2 == 0)\r\n            {\r\n                rad = cdf.valFromProb(Helper.rnum());\r\n            }\r\n            else\r\n            {\r\n                x = 2 * this._radGalaxy * Helper.rnum() - this._radGalaxy;\r\n                y = 2 * this._radGalaxy * Helper.rnum() - this._radGalaxy;\r\n                rad = Math.sqrt(x * x + y * y);\r\n            }\r\n    \r\n            let dustParticle : Star = new Star();\r\n            dustParticle.a = rad;\r\n            dustParticle.b = rad * this.getExcentricity(rad);\r\n            dustParticle.tiltAngle = this.getAngularOffset(rad);\r\n            dustParticle.theta0 = 360.0 * Helper.rnum();\r\n            dustParticle.velTheta = this.getOrbitalVelocity((dustParticle.a + dustParticle.b) / 2.0);\r\n            dustParticle.type = 1;\r\n    \r\n            // I want the outer parts to appear blue, the inner parts yellow. I'm imposing\r\n            // the following temperature distribution (no science here it just looks right)\r\n            dustParticle.temp = this._baseTemp + rad / 4.5;\r\n            dustParticle.mag = 0.02 + 0.15 * Helper.rnum();\r\n            this._stars.push(dustParticle);\r\n        }\r\n    \r\n        //\r\n        // 3.) Initialize additional dust filaments\r\n        //\r\n    \r\n        for (let i = 0; i < this._numStars / 100; ++i)\r\n        {\r\n            rad = cdf.valFromProb(Helper.rnum());\r\n    \r\n            x = 2 * this._radGalaxy * Helper.rnum() - this._radGalaxy;\r\n            y = 2 * this._radGalaxy * Helper.rnum() - this._radGalaxy;\r\n            rad = Math.sqrt(x * x + y * y);\r\n    \r\n            let theta : number = 360.0 * Helper.rnum();\r\n            let mag : number= 0.1 + 0.05 * Helper.rnum();\r\n            let a : number= rad;\r\n            let b : number= rad * this.getExcentricity(rad);\r\n            let num : number= 100 * Helper.rnum();\r\n            let temp : number= this._baseTemp + rad / 4.5 - 2000;\r\n\r\n            for (let i = 0; i < num; ++i)\r\n            {\r\n                rad = rad + 200 - 400 * Helper.rnum();\r\n                let dustParticle : Star = new Star();\r\n                dustParticle.a = rad;\r\n                dustParticle.b = rad * this.getExcentricity(rad);\r\n                dustParticle.tiltAngle = this.getAngularOffset(rad);\r\n                dustParticle.theta0 = theta + 10 - 20 * Helper.rnum();\r\n                dustParticle.velTheta = this.getOrbitalVelocity((dustParticle.a + dustParticle.b) / 2.0);\r\n    \r\n                // I want the outer parts to appear blue, the inner parts yellow. I'm imposing\r\n                // the following temperature distribution (no science here it just looks right)\r\n                dustParticle.temp = this._baseTemp + rad / 4.5 - 1000;;\r\n                dustParticle.mag = mag + 0.025 * Helper.rnum();\r\n                dustParticle.type = 2;\r\n                this._stars.push(dustParticle);\r\n            }\r\n        }\r\n\r\n        //\r\n        // 4.) Initialise H2 regions\r\n        // \r\n    \r\n        for (let i = 0; i < this._numH2; ++i)\r\n        {\r\n            x = 2 * this._radGalaxy * Helper.rnum() - this._radGalaxy;\r\n            y = 2 * this._radGalaxy * Helper.rnum() - this._radGalaxy;\r\n            rad = Math.sqrt(x * x + y * y);\r\n    \r\n            let particleH2 : Star = new Star();\r\n            particleH2.a = rad;\r\n            particleH2.b = rad * this.getExcentricity(rad);\r\n            particleH2.tiltAngle = this.getAngularOffset(rad);\r\n            particleH2.theta0 = 360.0 * Helper.rnum();\r\n            particleH2.velTheta = this.getOrbitalVelocity((particleH2.a + particleH2.b) / 2.0);\r\n            particleH2.temp = 6000 + (6000 * Helper.rnum()) - 3000;\r\n            particleH2.mag = 0.1 + 0.05 * Helper.rnum();\r\n            particleH2.type = 3;\r\n    \r\n            this._stars.push(particleH2);\r\n    \r\n            // Push particle again with type 4 (bright red core of an h2 region)\r\n            let particleH2Highlight = new Star();\r\n            particleH2Highlight.a = particleH2.a;\r\n            particleH2Highlight.b = particleH2.b;\r\n            particleH2Highlight.tiltAngle = particleH2.tiltAngle;\r\n            particleH2Highlight.theta0 = particleH2.theta0;\r\n            particleH2Highlight.velTheta = particleH2.velTheta;\r\n            particleH2Highlight.temp = particleH2.temp;\r\n            particleH2Highlight.mag = particleH2.mag;\r\n            particleH2Highlight.type = 4;\r\n            this._stars.push(particleH2Highlight);\r\n        }\r\n    }\r\n        \r\n    public reset(param: GalaxyParam) : void \r\n    {\r\n        this._baseTemp = param.baseTemp;\r\n        this._elEx1 = param.ex1;\r\n        this._elEx2 = param.ex2;\r\n        this._elEx2 = param.ex2;\r\n        this._angleOffset = param.deltaAng;\r\n        this._radCore = param.radCore;\r\n        this._radGalaxy = param.rad;\r\n        this._radFarField = param.rad * 2;  // there is no science behind this threshold it just looks nice\r\n        this._numStars = param.numStars;\r\n        this._dustRenderSize = param.dustRenderSize;\r\n        this._hasDarkMatter = param.hasDarkMatter;\r\n        this._pertN = param.pertN;\r\n        this._pertAmp = param.pertAmp;\r\n    \r\n        this.initStarsAndDust();\r\n    }\r\n\r\n    get stars() : Star[]\r\n    {\r\n        return this._stars;\r\n    }\r\n\r\n    get rad() : number\r\n    {\r\n        return this._radGalaxy;\r\n    }\r\n\r\n    set rad(value:number)\r\n    {\r\n        this._radGalaxy = value;\r\n        this._radFarField = value * 2;\r\n    }\r\n\r\n    get coreRad() : number \r\n    {\r\n        return this._radCore;\r\n    }\r\n\r\n    set coreRad(value:number)\r\n    {\r\n        this._radCore = value;\r\n    }\r\n\r\n    get farFieldRad() : number \r\n    {\r\n        return this._radFarField;\r\n    }\r\n\r\n    public getExcentricity(r: number) : number \r\n    {\r\n        if (r < this._radCore)\r\n        {\r\n            // Core region of the galaxy. Innermost part is round\r\n            // excentricity increasing linear to the border of the core.\r\n            return 1 + (r / this._radCore) * (this._elEx1 - 1);\r\n        }\r\n        else if (r > this._radCore && r <= this._radGalaxy)\r\n        {\r\n            return this._elEx1 + (r - this._radCore) / (this._radGalaxy - this._radCore) * (this._elEx2 - this._elEx1);\r\n        }\r\n        else if (r > this._radGalaxy && r < this._radFarField)\r\n        {\r\n            // excentricity is slowly reduced to 1.\r\n            return this._elEx2 + (r - this._radGalaxy) / (this._radFarField - this._radGalaxy) * (1 - this._elEx2);\r\n        }\r\n        else\r\n            return 1;\r\n    }\r\n\r\n    public getOrbitalVelocity(rad : number) : number \r\n    {\r\n        let vel_kms : number = 0;  // velovity in kilometer per seconds\r\n        if (this._hasDarkMatter)\r\n        {\r\n            vel_kms = Helper.velocityWithDarkMatter(rad);\r\n        }\r\n        else\r\n        {\r\n            vel_kms = Helper.velocityWithoutDarkMatter(rad);\r\n        }\r\n    \r\n        // Calculate velocity in degree per year\r\n        let u : number = 2.0 * Math.PI * rad * Helper.PC_TO_KM;\r\n        let time : number = u / (vel_kms * Helper.SEC_PER_YEAR);\r\n    \r\n        return 360.0 / time;\r\n    }\r\n\r\n    public getAngularOffset(rad:number) : number {\r\n        return rad * this._angleOffset;\r\n    }\r\n\r\n    public get angleOffset() : number {\r\n        return this._angleOffset;\r\n    }\r\n\r\n    public set angleOffset(angle:number)  {\r\n        this._angleOffset = angle;\r\n    }\r\n\r\n    public get exInner() : number {\r\n        return this._elEx1;\r\n    }\r\n\r\n    public set exInner(ex:number)  {\r\n        this._elEx1 = ex;\r\n    }\r\n\r\n    public get exOuter() : number {\r\n        return this._elEx2\r\n    }\r\n\r\n    public set exOuter(ex:number)  {\r\n        this._elEx2 = ex;\r\n    }\r\n\r\n    public get dustRenderSize() : number {\r\n        return this._dustRenderSize\r\n    }\r\n\r\n    public set dustRenderSize(value : number) {\r\n        this._dustRenderSize = value\r\n    }\r\n\r\n    public get pertN() : number {\r\n\t    return this._pertN\r\n    }\r\n\r\n    public set pertN(pertN:number) {\r\n\t    this._pertN = pertN\r\n    }\r\n\r\n    public get pertAmp() : number {\r\n        return this._pertAmp\r\n    }\r\n\r\n    public get baseTemp() : number {\r\n        return this._baseTemp\r\n    }\r\n\r\n    public get hasDarkMatter() : boolean {\r\n        return this._hasDarkMatter\r\n    }\r\n\r\n    public set hasDarkMatter(hasDarkMatter : boolean) {\r\n        this._hasDarkMatter = hasDarkMatter\r\n        this.initStarsAndDust()\r\n    }\r\n}","import { mat4,  vec3 } from 'gl-matrix'\r\n\r\nimport { Color, GalaxyParam, Vec3, VertexColor, VertexStar, Star } from './Types' \r\nimport { Helper } from './Helper'\r\nimport { VertexBufferLines } from './VertexBufferLines'\r\nimport { VertexBufferStars } from './VertexBufferStars';\r\nimport { Galaxy } from './Galaxy'\r\n\r\nenum DisplayItem {\r\n    NONE          = 0,\r\n    AXIS          = 0b0000001,\r\n    STARS         = 0b0000010,\r\n    DENSITY_WAVES = 0b0000100,\r\n    VELOCITY      = 0b0001000,\r\n    DUST          = 0b0010000,\r\n    H2            = 0b0100000,\r\n    FILAMENTS     = 0b1000000,\r\n}\r\n\r\n\r\nexport enum RenderUpdateHint {\r\n    NONE = 0,\r\n    DENSITY_WAVES = 1 << 1,\r\n    AXIS = 1 << 2,\r\n    STARS = 1 << 3,\r\n    CREATE_VELOCITY_CURVE = 1 << 4\r\n}\r\n\r\n\r\nexport class GalaxyRenderer {\r\n    private canvas : HTMLCanvasElement;\r\n    private gl : WebGL2RenderingContext;\r\n\r\n\tprivate vertDensityWaves : VertexBufferLines | null = null;\r\n\tprivate vertAxis : VertexBufferLines | null = null;\r\n\tprivate vertVelocityCurve : VertexBufferLines| null = null;\r\n    private vertStars : VertexBufferStars | null = null;\r\n\r\n    private _fov : number = 0;\r\n\r\n    private matProjection : mat4 = mat4.create();\r\n\tprivate matView : mat4 = mat4.create();\r\n\r\n\tprivate camPos : vec3 = vec3.create();\r\n\tprivate camLookAt : vec3 = vec3.create();\r\n\tprivate camOrient : vec3 = vec3.create();\r\n\r\n    private time : number = 0;\r\n    private flags : DisplayItem = DisplayItem.STARS | DisplayItem.AXIS | DisplayItem.DUST | DisplayItem.H2 | DisplayItem.FILAMENTS;\r\n\r\n    private _renderUpdateHint : RenderUpdateHint = RenderUpdateHint.STARS |RenderUpdateHint.DENSITY_WAVES | RenderUpdateHint.AXIS | RenderUpdateHint.CREATE_VELOCITY_CURVE;\r\n\r\n    private _galaxy : Galaxy = new Galaxy()\r\n    private preset : GalaxyParam[] = []\r\n\r\n    private _timeStepSize : number = 100000.0;\r\n\r\n    public set renderUpdateHint(hint: RenderUpdateHint)  {\r\n        this._renderUpdateHint = hint\r\n    }\r\n\r\n    public get renderUpdateHint() : RenderUpdateHint {\r\n        return this._renderUpdateHint\r\n    }\r\n\r\n    public get galaxy() : Galaxy {\r\n        return this._galaxy\r\n    }\r\n\r\n    public get timeStep() : number {\r\n        return this._timeStepSize\r\n    }\r\n\r\n    public set timeStep(ts:number) {\r\n        this._timeStepSize = ts\r\n    }\r\n\r\n    public constructor(canvas : HTMLCanvasElement) {\r\n        this.canvas = canvas;\r\n\r\n        this.gl = this.canvas.getContext(\"webgl2\") as WebGL2RenderingContext;\r\n        if (this.gl === null)\r\n            throw new Error(\"Unable to initialize WebGL2. Your browser may not support it.\");\r\n\r\n\t    this.vertDensityWaves = new VertexBufferLines(this.gl, 2, this.gl.STATIC_DRAW);\r\n        this.vertAxis = new VertexBufferLines(this.gl, 1, this.gl.STATIC_DRAW);\r\n\t    this.vertVelocityCurve = new VertexBufferLines(this.gl, 1, this.gl.DYNAMIC_DRAW);\r\n        this.vertStars = new VertexBufferStars(this.gl)\r\n\r\n        document.addEventListener('keydown', (event) => this.onKeydown(event));\r\n\r\n        this.initGL(this.gl);\r\n        this.initSimulation();\r\n\r\n        // Start the main loop\r\n        window.requestAnimationFrame((timeStamp) => this.mainLoop(timeStamp));\r\n    }\r\n\r\n    private onKeydown(event : KeyboardEvent) {\r\n/*        \r\n        const keyName = event.key;\r\n        console.log(\"Key \" + keyName + \" pressed\")\r\n\r\n        switch(keyName)\r\n        {\r\n            case '+':\r\n                this.galaxy.exInner = Math.max(this.galaxy.exInner - 0.05, 0.0)\r\n                this.renderUpdateHint |= RenderUpdateHint.DENSITY_WAVES\r\n                break;\r\n\r\n            case '-':\r\n                this.galaxy.exInner = this.galaxy.exInner + 0.05\r\n                this.renderUpdateHint |= RenderUpdateHint.DENSITY_WAVES\r\n                break;    \r\n        }\r\n*/        \r\n    }\r\n\r\n    private dustRenderSizeBase : number = 187;\r\n\r\n    public set fov(value : number) {\r\n        this._fov = value;\r\n\r\n        this.galaxy.dustRenderSize = Math.max(this.dustRenderSizeBase - 0.0026 * this._fov, 0);\r\n\r\n        this.adjustCamera();\r\n        this.renderUpdateHint |= RenderUpdateHint.AXIS | RenderUpdateHint.DENSITY_WAVES;\r\n    }\r\n\r\n    public get fov() {\r\n        return this._fov;\r\n    }\r\n\r\n    public set dustRenderSize(value : number) {\r\n        this.dustRenderSizeBase = value;\r\n        this.galaxy.dustRenderSize = Math.max(this.dustRenderSizeBase - 0.0026 * this._fov, 0);\r\n//        this.galaxy.dustRenderSize = value;\r\n    }\r\n\r\n    public get dustRenderSize() {\r\n//        return this.galaxy.dustRenderSize;\r\n        return this.dustRenderSizeBase;\r\n    }\r\n\r\n    private hasFlag(flag : DisplayItem) : boolean{\r\n        return (this.flags & flag) != 0;\r\n    }\r\n\r\n    private setFlag(flag : DisplayItem, stat : boolean) : void {\r\n        if (stat) \r\n            this.flags |= flag;\r\n        else\r\n            this.flags &= ~flag;\r\n    }\r\n\r\n    public get showAxis() : boolean {\r\n        return this.hasFlag(DisplayItem.AXIS);\r\n    }\r\n\r\n    public set showAxis(value : boolean) {\r\n        this.setFlag(DisplayItem.AXIS, value) \r\n    }\r\n    \r\n    public get showDensityWaves() : boolean {\r\n        return this.hasFlag(DisplayItem.DENSITY_WAVES);\r\n    }\r\n\r\n    public set showDensityWaves(value : boolean) {\r\n        this.setFlag(DisplayItem.DENSITY_WAVES, value) \r\n    }\r\n\r\n    public get showDust() : boolean {\r\n        return this.hasFlag(DisplayItem.DUST);\r\n    }\r\n\r\n    public set showDust(value : boolean) {\r\n        this.setFlag(DisplayItem.DUST, value) \r\n    }\r\n\r\n    public get showDustFilaments() : boolean {\r\n        return this.hasFlag(DisplayItem.FILAMENTS);\r\n    }\r\n\r\n    public set showDustFilaments(value : boolean) {\r\n        this.setFlag(DisplayItem.FILAMENTS, value) \r\n    }\r\n\r\n    public get showStars() : boolean {\r\n        return this.hasFlag(DisplayItem.STARS);\r\n    }\r\n\r\n    public set showStars(value : boolean) {\r\n        this.setFlag(DisplayItem.STARS, value) \r\n    }\r\n\r\n    public get showH2() : boolean {\r\n        return this.hasFlag(DisplayItem.H2);\r\n    }\r\n\r\n    public set showH2(value : boolean) {\r\n        this.setFlag(DisplayItem.H2, value) \r\n    }\r\n\r\n    public get showVelocity() : boolean {\r\n        return this.hasFlag(DisplayItem.VELOCITY);\r\n    }\r\n\r\n    public set showVelocity(value : boolean) {\r\n        this.setFlag(DisplayItem.VELOCITY, value) \r\n    }\r\n\r\n    public get hasDarkMatter() : boolean {\r\n        return this.galaxy.hasDarkMatter;\r\n    }\r\n\r\n    public set hasDarkMatter(hasDarkMatter : boolean) {\r\n        this.galaxy.hasDarkMatter = hasDarkMatter;\r\n        this.renderUpdateHint |= RenderUpdateHint.STARS | RenderUpdateHint.CREATE_VELOCITY_CURVE;\r\n    }\r\n\r\n    public selectPreset(idx : number) : void {\r\n        this.galaxy.reset(this.preset[idx]);\r\n        this.fov = this.galaxy.rad * 3;\r\n        this.renderUpdateHint |= RenderUpdateHint.DENSITY_WAVES | RenderUpdateHint.STARS | RenderUpdateHint.CREATE_VELOCITY_CURVE;\r\n    }\r\n\r\n    public updateDensityWaveParam(\r\n        coreRad : number, \r\n        rad : number,  \r\n        angularOffset : number, \r\n        innerEx : number, \r\n        outterEx : number,\r\n        pertN : number) : void {\r\n        this.galaxy.coreRad = coreRad\r\n        this.galaxy.rad = rad\r\n        this.galaxy.exInner = innerEx\r\n        this.galaxy.exOuter = outterEx\r\n        this.galaxy.angleOffset = angularOffset\r\n        this.galaxy.pertN = pertN\r\n        this.renderUpdateHint |= RenderUpdateHint.DENSITY_WAVES;\r\n    }\r\n\r\n    private initSimulation() {\r\n        this.preset.push(new GalaxyParam(13000, 4000, 0.0004, 0.85, 0.95, 40000, true, 2, 40, 70, 4000));\r\n        this.preset.push(new GalaxyParam(16000, 4000, .0003, .8, .85, 40000, true, 0, 40, 58, 4500));\r\n        this.preset.push(new GalaxyParam(13000, 4000, .00064, .9, .9, 40000, true, 0, 0, 75, 4100));\r\n        this.preset.push(new GalaxyParam(13000, 4000, .0004, 1.35, 1.05, 40000, true, 0, 0, 70, 4500));\r\n        this.preset.push(new GalaxyParam(13000, 4500, .0002, .65, .95, 40000, true, 3, 72, 80, 4000));\r\n        this.preset.push(new GalaxyParam(15000, 4000, .0003, 1.45, 1.0, 40000, true, 0, 0, 80, 4500));\r\n        this.preset.push(new GalaxyParam(14000, 12500, .0002, 0.65, 0.95, 40000, true, 3, 72, 85, 2200));\r\n        this.preset.push(new GalaxyParam(13000, 1500, .0004, 1.1, 1.0, 40000, true, 1, 20, 80, 2800 ));\r\n        this.preset.push(new GalaxyParam(13000, 4000, .0004, .85, .95, 40000, true, 1, 20, 80, 4500 ));\r\n    \r\n        this.galaxy.reset(this.preset[0])\r\n        this.fov = this.galaxy.rad * 3;\r\n    }\r\n\r\n    private initGL(gl : WebGL2RenderingContext) : void {\r\n        if (this.vertAxis==null)\r\n            throw new Error(\"initGL(): vertAxis is null!\");\r\n\r\n        if ( this.vertDensityWaves==null)\r\n            throw new Error(\"initGL(): vertDensityWaves is null!\");\r\n\r\n        if ( this.vertVelocityCurve==null)\r\n            throw new Error(\"initGL(): vertVelocityCurve is null!\");\r\n\r\n        if ( this.vertStars==null)\r\n            throw new Error(\"initGL(): vertStars is null!\");\r\n\r\n        this.vertAxis.initialize();\r\n        this.vertDensityWaves.initialize();\r\n\t    this.vertVelocityCurve.initialize();\r\n\t    this.vertStars.initialize();\r\n\r\n        // GL initialization\r\n        gl.viewport(0, 0, this.canvas.width, this.canvas.height);\r\n\r\n    \tgl.disable(gl.DEPTH_TEST);\r\n        this.setCameraOrientation(vec3.fromValues(0, 1, 0));\r\n    }\r\n\r\n    private setCameraOrientation(orient : vec3) : void {   \r\n\t    this.camOrient = orient;\r\n\t    this.adjustCamera();\r\n    }\r\n\r\n    private adjustCamera() : void {\r\n\t    let l : number = this.fov / 2.0;\r\n\t    let aspect : number = this.canvas.width / this.canvas.height;\r\n\r\n\t    mat4.ortho(\r\n            this.matProjection,\r\n    \t \t-l * aspect, l * aspect, \r\n\t     \t-l, l, \r\n\t\t    -l, l);\r\n\t\r\n        mat4.lookAt(\r\n            this.matView,\r\n            this.camPos, \r\n            this.camLookAt, \r\n            this.camOrient);\r\n    }\r\n\r\n    private updateAxis() : void {\r\n        if (this.vertAxis==null)\r\n            throw new Error(\"Galaxyrenderer.updateAxis(): this.vertAxis is null!\");\r\n\r\n//        console.log(\"updating axis data.\");\r\n\r\n        let vert : VertexColor[] = [];\r\n        let idx : number[] = [];\r\n\r\n        let s : number = Math.pow(10, Math.floor((Math.log10(this.fov / 2))));\r\n        let l : number = this.fov / 100;\r\n        let p : number = 0;\r\n\r\n        let r : number = 0.3;\r\n        let g : number = 0.3;\r\n        let b : number = 0.3;\r\n        let a : number = 0.8;\r\n    \r\n        for (let i = 0; p < this.fov; ++i) {\r\n            p += s;\r\n            idx.push(vert.length);\r\n            vert.push(new VertexColor(p, -l, 0, r, g, b, a));\r\n    \r\n            idx.push(vert.length);\r\n            vert.push(new VertexColor( p,  l, 0, r, g, b, a ));\r\n    \r\n            idx.push(vert.length);\r\n            vert.push(new VertexColor( -p, -l, 0, r, g, b, a ));\r\n    \r\n            idx.push(vert.length);\r\n            vert.push(new VertexColor( -p,  0, 0, r, g, b, a ));\r\n    \r\n            idx.push(vert.length);\r\n            vert.push(new VertexColor( -l, p, 0, r, g, b, a ));\r\n    \r\n            idx.push(vert.length);\r\n            vert.push(new VertexColor( 0, p, 0, r, g, b, a ));\r\n    \r\n            idx.push(vert.length);\r\n            vert.push(new VertexColor( -l, -p, 0, r, g, b, a ));\r\n    \r\n            idx.push(vert.length);\r\n            vert.push(new VertexColor( 0, -p, 0, r, g, b, a ));\r\n        }\r\n    \r\n        idx.push(vert.length);\r\n        vert.push(new VertexColor( -this.fov, 0, 0, r, g, b, a ));\r\n    \r\n        idx.push(vert.length);\r\n        vert.push(new VertexColor( this.fov, 0, 0, r, g, b, a ));\r\n    \r\n        idx.push(vert.length);\r\n        vert.push(new VertexColor( 0, -this.fov, 0, r, g, b, a ));\r\n    \r\n        idx.push(vert.length);\r\n        vert.push(new VertexColor( 0, this.fov, 0, r, g, b, a ));\r\n\r\n        this.vertAxis.createBuffer(vert, idx, this.gl.LINES);\r\n        this.renderUpdateHint &= ~RenderUpdateHint.AXIS;        \r\n    }\r\n\r\n    private updateDensityWaves() : void {\r\n        if (this.vertDensityWaves==null)\r\n            throw new Error(\"GalaxyRenderer.updateDensityWaves(): this.vertDensityWaves is null!\")\r\n\r\n//        console.log(\"updating density waves.\");\r\n\r\n        let vert : VertexColor[] = []\r\n        let idx : number[] = []\r\n    \r\n        //\r\n        // First add the density waves\r\n        //\r\n\r\n        const num : number = 100;\r\n        let dr : number = this.galaxy.farFieldRad / num;\r\n        for (let i = 0; i <= num; ++i) {\r\n            let r : number = dr * (i + 1);\r\n            this.addEllipsisVertices(\r\n                vert,\r\n                idx,\r\n                r,\r\n                r * this.galaxy.getExcentricity(r),\r\n                Helper.RAD_TO_DEG * this.galaxy.getAngularOffset(r),\r\n                this.galaxy.pertN,\r\n                this.galaxy.pertAmp,\r\n                new Color(1, 1, 1, 0.2));\r\n        }\r\n\r\n        //\r\n        // Add three circles at the boundaries of core, galaxy and galactic medium\r\n        //\r\n\r\n        const pertNum : number = 0;\r\n        const pertAmp : number = 0;\r\n        let r : number = this.galaxy.coreRad;\r\n        this.addEllipsisVertices(vert, idx, r, r, 0, pertNum, pertAmp, new Color(1, 1, 0, 0.5));\r\n    \r\n        r = this.galaxy.rad;\r\n        this.addEllipsisVertices(vert, idx, r, r, 0, pertNum, pertAmp, new Color(0, 1, 0, 0.5 ));\r\n    \r\n        r = this.galaxy.farFieldRad;\r\n        this.addEllipsisVertices(vert, idx, r, r, 0, pertNum, pertAmp, new Color(1, 0, 0, 0.5));\r\n\r\n        this.vertDensityWaves.createBuffer(vert, idx, this.gl.LINE_STRIP);\r\n    \r\n        this.renderUpdateHint &= ~RenderUpdateHint.DENSITY_WAVES;\r\n    }\r\n\r\n    private addEllipsisVertices(\r\n        vert : VertexColor[],\r\n        vertIdx : number[],\r\n        a : number,\r\n        b : number,\r\n        angle : number,\r\n        pertNum : number,\r\n        pertAmp : number,\r\n        col : Color) : void\r\n    {\r\n        const steps : number = 100;\r\n        const x : number = 0;\r\n        const y : number = 0;\r\n        \r\n        // Angle is given by Degree Value\r\n        let beta : number = -angle * Helper.DEG_TO_RAD;\r\n        let sinbeta : number = Math.sin(beta);\r\n        let cosbeta : number = Math.cos(beta);\r\n    \r\n        let firstPointIdx : number = vert.length;\r\n        for (let i = 0; i < 360; i += 360 / steps)\r\n        {\r\n            let alpha : number = i * Helper.DEG_TO_RAD;\r\n            let sinalpha = Math.sin(alpha);\r\n            let cosalpha = Math.cos(alpha);\r\n    \r\n            let fx : number = x + (a * cosalpha * cosbeta - b * sinalpha * sinbeta);\r\n            let fy : number = y + (a * cosalpha * sinbeta + b * sinalpha * cosbeta);\r\n    \r\n            if (pertNum > 0)\r\n            {\r\n                fx += ((a / pertAmp) * Math.sin(alpha * 2 * pertNum));\r\n                fy += ((a / pertAmp) * Math.cos(alpha * 2 * pertNum));\r\n            }\r\n    \r\n            vertIdx.push(vert.length);\r\n    \r\n            let vc : VertexColor = new VertexColor(fx, fy, 0, col.r, col.g, col.b, col.a);\r\n            vert.push(vc);\r\n        }\r\n    \r\n        // Close the loop and reset the element index array\r\n        vertIdx.push(firstPointIdx);\r\n        vertIdx.push(4294967295); \r\n    }\r\n    \r\n    private updateStars() : void {\r\n        if (this.vertStars==null)\r\n            throw new Error(\"GalaxyRenderer.updateStars(): this.vertStars is null!\")\r\n\r\n//        console.log(\"updating stars.\");\r\n\r\n        let vert : VertexStar[] = [];\r\n        let idx : number[] = [];\r\n    \r\n        let stars : Star[] = this.galaxy.stars;\r\n    \r\n        let a : number = 1;\r\n        for (let i = 1; i < stars.length; ++i)\r\n        {\r\n            let col : Color = Helper.colorFromTemperature(stars[i].temp);\r\n            col.a = a;\r\n    \r\n            idx.push(vert.length);\r\n            vert.push(new VertexStar(stars[i], col));\r\n        }\r\n    \r\n        this.vertStars.createBuffer(vert, idx, this.gl.POINTS);\r\n        this.renderUpdateHint &= ~RenderUpdateHint.STARS;\r\n    }\r\n\r\n    private updateVelocityCurve() : void {\r\n        if (this.vertVelocityCurve==null)\r\n            throw new Error(\"GalaxyRenderer.updateVelocityCurve(): this.vertVelocityCurve is null!\")\r\n\r\n//        console.log(\"updating velocity curves.\");\r\n\r\n        let vert : VertexColor[] = [];\r\n\t    let idx : number[] = [];\r\n        let cr : number= 0.5, cg : number= 1, cb : number= 1, ca : number= 1;\r\n        \r\n\t    for (let r = 0; r < this.galaxy.farFieldRad; r += 100) {\r\n            let v : number = (this.galaxy.hasDarkMatter) \r\n                ? Helper.velocityWithDarkMatter(r)\r\n                : Helper.velocityWithoutDarkMatter(r)\r\n               \r\n            idx.push(vert.length);\r\n            vert.push(new VertexColor(r,v * 10, 0,  cr, cg, cb, ca));\r\n\t    }\r\n\r\n        this.vertVelocityCurve.createBuffer(vert, idx, this.gl.POINTS);\r\n        this.renderUpdateHint &= ~RenderUpdateHint.CREATE_VELOCITY_CURVE;\r\n    }   \r\n\r\n    private update() : void {\r\n        this.time += this.timeStep;\r\n\r\n        if ((this.renderUpdateHint & RenderUpdateHint.AXIS) != 0)\r\n            this.updateAxis();\r\n\r\n        if ((this.renderUpdateHint & RenderUpdateHint.DENSITY_WAVES) != 0)\r\n            this.updateDensityWaves();\r\n\r\n        if ((this.renderUpdateHint & RenderUpdateHint.STARS) != 0)\r\n            this.updateStars();\r\n\r\n        if ((this.renderUpdateHint & RenderUpdateHint.CREATE_VELOCITY_CURVE) != 0)\r\n            this.updateVelocityCurve();\r\n\r\n        this.camOrient = vec3.fromValues(0, 1, 0 );\r\n        this.camPos = vec3.fromValues(0, 0, 5000);\r\n        this.camLookAt = vec3.fromValues(0, 0, 0);\r\n    }\r\n\r\n    private render() {\r\n        this.gl.clearColor(0.0, 0.0, 0, 0);\r\n        this.gl.clear(this.gl.COLOR_BUFFER_BIT | this.gl.DEPTH_BUFFER_BIT);\r\n        this.adjustCamera();\r\n\r\n        if (this.vertAxis!=null && this.flags & DisplayItem.AXIS)\r\n            this.vertAxis.draw(this.matView, this.matProjection);\r\n\r\n        let features : number = 0;\r\n        if (this.flags & DisplayItem.STARS)\r\n            features |= 1 << 0;\r\n    \r\n        if (this.flags & DisplayItem.DUST)\r\n            features |= 1 << 1;\r\n    \r\n        if (this.flags & DisplayItem.FILAMENTS)\r\n            features |= 1 << 2;\r\n    \r\n        if (this.flags & DisplayItem.H2)\r\n            features |= 1 << 3;\r\n\r\n        if (this.vertStars!=null && features != 0)\r\n        {\r\n            this.vertStars.updateShaderVariables(this.time, this.galaxy.pertN, this.galaxy.pertAmp, this.galaxy.dustRenderSize, features);\r\n            this.vertStars.draw(this.matView, this.matProjection);\r\n        }\r\n\r\n        if (this.vertDensityWaves!=null && this.flags & DisplayItem.DENSITY_WAVES)\r\n            this.vertDensityWaves.draw(this.matView, this.matProjection);\r\n    \r\n        if (this.vertVelocityCurve!=null && this.flags & DisplayItem.VELOCITY)\r\n            this.vertVelocityCurve.draw(this.matView, this.matProjection);\r\n    }\r\n\r\n    public mainLoop(timestamp : any) {\r\n        let error : boolean = false;\r\n        try\r\n        {\r\n            this.update();\r\n            this.render();\r\n        }\r\n        catch(Error)\r\n        {\r\n            console.log(Error.message);\r\n            error = true;\r\n        }\r\n        finally\r\n        {\r\n            if (!error)\r\n                window.requestAnimationFrame( (timestamp) => this.mainLoop(timestamp) );\r\n        }\r\n    }\r\n\r\n}\r\n","import { Color } from './Types'\r\n\r\nexport class Helper\r\n{\r\n    public static PC_TO_KM : number = 3.08567758129e13;\r\n\r\n    public static SEC_PER_YEAR : number = 365.25 * 86400;\r\n\r\n    public static DEG_TO_RAD : number = Math.PI / 180.0;\r\n\r\n    public static RAD_TO_DEG : number = 180.0 / Math.PI;\r\n\r\n    public static CONTANT_OF_GRAVITY : number = 6.672e-11;\r\n\r\n\tpublic static powerTwoFloor(val : number) : number\r\n\t{\r\n        let power : number = 2;\r\n        let nextVal : number = power * 2;\r\n\r\n\t\twhile ((nextVal *= 2) <= val)\r\n\t\t{\r\n\t\t\tpower = power << 1; \r\n\t\t}\r\n\r\n\t\treturn power << 1;\r\n\t}\r\n\r\n\tpublic static rnum() : number\r\n\t{\r\n\t\treturn Math.random();\r\n\t}\r\n\r\n\tpublic static colorFromTemperature(temp : number) : Color\r\n\t{\r\n\t\tlet MinTemp : number = 1000;\r\n\t\tlet MaxTemp : number = 10000;\r\n\t\tlet colNum : number = 200;\r\n\r\n\t\tlet col : Color[] = [\r\n\t\t\t{ \"r\":1, \"g\":-0.00987248, \"b\":-0.0166818, \"a\":1 },\r\n\t\t\t{ \"r\":1, \"g\":0.000671682, \"b\":-0.0173831, \"a\":1 },\r\n\t\t\t{ \"r\":1, \"g\":0.0113477, \"b\":-0.0179839, \"a\":1 },\r\n\t\t\t{ \"r\":1, \"g\":0.0221357, \"b\":-0.0184684, \"a\":1 },\r\n\t\t\t{ \"r\":1, \"g\":0.0330177, \"b\":-0.0188214, \"a\":1 },\r\n\t\t\t{ \"r\":1, \"g\":0.0439771, \"b\":-0.0190283, \"a\":1 },\r\n\t\t\t{ \"r\":1, \"g\":0.0549989, \"b\":-0.0190754, \"a\":1 },\r\n\t\t\t{ \"r\":1, \"g\":0.0660696, \"b\":-0.0189496, \"a\":1 },\r\n\t\t\t{ \"r\":1, \"g\":0.0771766, \"b\":-0.0186391, \"a\":1 },\r\n\t\t\t{ \"r\":1, \"g\":0.0883086, \"b\":-0.0181329, \"a\":1 },\r\n\t\t\t{ \"r\":1, \"g\":0.0994553, \"b\":-0.017421, \"a\":1 },\r\n\t\t\t{ \"r\":1, \"g\":0.110607, \"b\":-0.0164945, \"a\":1 },\r\n\t\t\t{ \"r\":1, \"g\":0.121756, \"b\":-0.0153455, \"a\":1 },\r\n\t\t\t{ \"r\":1, \"g\":0.132894, \"b\":-0.0139671, \"a\":1 },\r\n\t\t\t{ \"r\":1, \"g\":0.144013, \"b\":-0.0123534, \"a\":1 },\r\n\t\t\t{ \"r\":1, \"g\":0.155107, \"b\":-0.0104993, \"a\":1 },\r\n\t\t\t{ \"r\":1, \"g\":0.166171, \"b\":-0.0084008, \"a\":1 },\r\n\t\t\t{ \"r\":1, \"g\":0.177198, \"b\":-0.00605465, \"a\":1 },\r\n\t\t\t{ \"r\":1, \"g\":0.188184, \"b\":-0.00345843, \"a\":1 },\r\n\t\t\t{ \"r\":1, \"g\":0.199125, \"b\":-0.000610485, \"a\":1 },\r\n\t\t\t{ \"r\":1, \"g\":0.210015, \"b\":0.00249014, \"a\":1 },\r\n\t\t\t{ \"r\":1, \"g\":0.220853, \"b\":0.00584373, \"a\":1 },\r\n\t\t\t{ \"r\":1, \"g\":0.231633, \"b\":0.00944995, \"a\":1 },\r\n\t\t\t{ \"r\":1, \"g\":0.242353, \"b\":0.0133079, \"a\":1 },\r\n\t\t\t{ \"r\":1, \"g\":0.25301, \"b\":0.0174162, \"a\":1 },\r\n\t\t\t{ \"r\":1, \"g\":0.263601, \"b\":0.021773, \"a\":1 },\r\n\t\t\t{ \"r\":1, \"g\":0.274125, \"b\":0.0263759, \"a\":1 },\r\n\t\t\t{ \"r\":1, \"g\":0.284579, \"b\":0.0312223, \"a\":1 },\r\n\t\t\t{ \"r\":1, \"g\":0.294962, \"b\":0.0363091, \"a\":1 },\r\n\t\t\t{ \"r\":1, \"g\":0.305271, \"b\":0.0416328, \"a\":1 },\r\n\t\t\t{ \"r\":1, \"g\":0.315505, \"b\":0.0471899, \"a\":1 },\r\n\t\t\t{ \"r\":1, \"g\":0.325662, \"b\":0.0529765, \"a\":1 },\r\n\t\t\t{ \"r\":1, \"g\":0.335742, \"b\":0.0589884, \"a\":1 },\r\n\t\t\t{ \"r\":1, \"g\":0.345744, \"b\":0.0652213, \"a\":1 },\r\n\t\t\t{ \"r\":1, \"g\":0.355666, \"b\":0.0716707,\"a\": 1 },\r\n\t\t\t{ \"r\":1, \"g\":0.365508, \"b\":0.078332, \"a\":1 },\r\n\t\t\t{ \"r\":1, \"g\":0.375268, \"b\":0.0852003, \"a\":1 },\r\n\t\t\t{ \"r\":1, \"g\":0.384948, \"b\":0.0922709, \"a\":1 },\r\n\t\t\t{ \"r\":1, \"g\":0.394544, \"b\":0.0995389, \"a\":1 },\r\n\t\t\t{ \"r\":1, \"g\":0.404059, \"b\":0.106999, \"a\":1 },\r\n\t\t\t{ \"r\":1, \"g\":0.41349, \"b\":0.114646, \"a\":1 },\r\n\t\t\t{ \"r\":1, \"g\":0.422838, \"b\":0.122476, \"a\":1 },\r\n\t\t\t{ \"r\":1, \"g\":0.432103, \"b\":0.130482, \"a\":1 },\r\n\t\t\t{ \"r\":1, \"g\":0.441284, \"b\":0.138661, \"a\":1 },\r\n\t\t\t{ \"r\":1, \"g\":0.450381, \"b\":0.147005, \"a\":1 },\r\n\t\t\t{ \"r\":1, \"g\":0.459395, \"b\":0.155512, \"a\":1 },\r\n\t\t\t{ \"r\":1, \"g\":0.468325, \"b\":0.164175, \"a\":1 },\r\n\t\t\t{ \"r\":1, \"g\":0.477172, \"b\":0.172989, \"a\":1 },\r\n\t\t\t{ \"r\":1, \"g\":0.485935, \"b\":0.181949, \"a\":1 },\r\n\t\t\t{ \"r\":1, \"g\":0.494614, \"b\":0.19105, \"a\":1 },\r\n\t\t\t{ \"r\":1, \"g\":0.503211, \"b\":0.200288, \"a\":1 },\r\n\t\t\t{ \"r\":1, \"g\":0.511724, \"b\":0.209657, \"a\":1 },\r\n\t\t\t{ \"r\":1, \"g\":0.520155, \"b\":0.219152, \"a\":1 },\r\n\t\t\t{ \"r\":1, \"g\":0.528504, \"b\":0.228769, \"a\":1 },\r\n\t\t\t{ \"r\":1, \"g\":0.536771, \"b\":0.238502, \"a\":1 },\r\n\t\t\t{ \"r\":1, \"g\":0.544955, \"b\":0.248347, \"a\":1 },\r\n\t\t\t{ \"r\":1, \"g\":0.553059, \"b\":0.2583, \"a\":1 },\r\n\t\t\t{ \"r\":1, \"g\":0.561082, \"b\":0.268356, \"a\":1 },\r\n\t\t\t{ \"r\":1, \"g\":0.569024, \"b\":0.27851, \"a\":1 },\r\n\t\t\t{ \"r\":1, \"g\":0.576886, \"b\":0.288758, \"a\":1 },\r\n\t\t\t{ \"r\":1, \"g\":0.584668, \"b\":0.299095, \"a\":1 },\r\n\t\t\t{ \"r\":1, \"g\":0.592372, \"b\":0.309518, \"a\":1 },\r\n\t\t\t{ \"r\":1, \"g\":0.599996, \"b\":0.320022, \"a\":1 },\r\n\t\t\t{ \"r\":1, \"g\":0.607543, \"b\":0.330603,\"a\": 1 },\r\n\t\t\t{ \"r\":1, \"g\":0.615012, \"b\":0.341257, \"a\":1 },\r\n\t\t\t{ \"r\":1, \"g\":0.622403, \"b\":0.35198, \"a\":1 },\r\n\t\t\t{ \"r\":1, \"g\":0.629719, \"b\":0.362768, \"a\":1 },\r\n\t\t\t{ \"r\":1, \"g\":0.636958, \"b\":0.373617, \"a\":1 },\r\n\t\t\t{ \"r\":1, \"g\":0.644122, \"b\":0.384524, \"a\":1 },\r\n\t\t\t{ \"r\":1, \"g\":0.65121, \"b\":0.395486, \"a\":1 },\r\n\t\t\t{ \"r\":1, \"g\":0.658225, \"b\":0.406497, \"a\":1 },\r\n\t\t\t{ \"r\":1, \"g\":0.665166, \"b\":0.417556, \"a\":1 },\r\n\t\t\t{ \"r\":1, \"g\":0.672034, \"b\":0.428659, \"a\":1 },\r\n\t\t\t{ \"r\":1, \"g\":0.678829, \"b\":0.439802, \"a\":1 },\r\n\t\t\t{ \"r\":1, \"g\":0.685552, \"b\":0.450982, \"a\":1 },\r\n\t\t\t{ \"r\":1, \"g\":0.692204, \"b\":0.462196, \"a\":1 },\r\n\t\t\t{ \"r\":1, \"g\":0.698786, \"b\":0.473441, \"a\":1 },\r\n\t\t\t{ \"r\":1, \"g\":0.705297, \"b\":0.484714, \"a\":1 },\r\n\t\t\t{ \"r\":1, \"g\":0.711739, \"b\":0.496013, \"a\":1 },\r\n\t\t\t{ \"r\":1, \"g\":0.718112, \"b\":0.507333, \"a\":1 },\r\n\t\t\t{ \"r\":1, \"g\":0.724417, \"b\":0.518673, \"a\":1 },\r\n\t\t\t{ \"r\":1, \"g\":0.730654, \"b\":0.53003, \"a\":1 },\r\n\t\t\t{ \"r\":1, \"g\":0.736825, \"b\":0.541402, \"a\":1 },\r\n\t\t\t{ \"r\":1, \"g\":0.742929, \"b\":0.552785, \"a\":1 },\r\n\t\t\t{ \"r\":1, \"g\":0.748968, \"b\":0.564177, \"a\":1 },\r\n\t\t\t{ \"r\":1, \"g\":0.754942, \"b\":0.575576, \"a\":1 },\r\n\t\t\t{ \"r\":1, \"g\":0.760851, \"b\":0.586979, \"a\":1 },\r\n\t\t\t{ \"r\":1, \"g\":0.766696, \"b\":0.598385, \"a\":1 },\r\n\t\t\t{ \"r\":1, \"g\":0.772479, \"b\":0.609791, \"a\":1 },\r\n\t\t\t{ \"r\":1, \"g\":0.778199, \"b\":0.621195, \"a\":1 },\r\n\t\t\t{ \"r\":1, \"g\":0.783858, \"b\":0.632595, \"a\":1 },\r\n\t\t\t{ \"r\":1, \"g\":0.789455, \"b\":0.643989, \"a\":1 },\r\n\t\t\t{ \"r\":1, \"g\":0.794991, \"b\":0.655375, \"a\":1 },\r\n\t\t\t{ \"r\":1, \"g\":0.800468, \"b\":0.666751, \"a\":1 },\r\n\t\t\t{ \"r\":1, \"g\":0.805886, \"b\":0.678116, \"a\":1 },\r\n\t\t\t{ \"r\":1, \"g\":0.811245, \"b\":0.689467, \"a\":1 },\r\n\t\t\t{ \"r\":1, \"g\":0.816546, \"b\":0.700803, \"a\":1 },\r\n\t\t\t{ \"r\":1, \"g\":0.82179, \"b\":0.712122, \"a\":1 },\r\n\t\t\t{ \"r\":1, \"g\":0.826976, \"b\":0.723423, \"a\":1 },\r\n\t\t\t{ \"r\":1, \"g\":0.832107, \"b\":0.734704, \"a\":1 },\r\n\t\t\t{ \"r\":1, \"g\":0.837183, \"b\":0.745964, \"a\":1 },\r\n\t\t\t{ \"r\":1, \"g\":0.842203, \"b\":0.757201, \"a\":1 },\r\n\t\t\t{ \"r\":1, \"g\":0.847169, \"b\":0.768414, \"a\":1 },\r\n\t\t\t{ \"r\":1, \"g\":0.852082, \"b\":0.779601, \"a\":1 },\r\n\t\t\t{ \"r\":1, \"g\":0.856941, \"b\":0.790762, \"a\":1 },\r\n\t\t\t{ \"r\":1, \"g\":0.861748, \"b\":0.801895, \"a\":1 },\r\n\t\t\t{ \"r\":1, \"g\":0.866503, \"b\":0.812999, \"a\":1 },\r\n\t\t\t{ \"r\":1, \"g\":0.871207, \"b\":0.824073, \"a\":1 },\r\n\t\t\t{ \"r\":1, \"g\":0.87586, \"b\":0.835115, \"a\":1 },\r\n\t\t\t{ \"r\":1, \"g\":0.880463, \"b\":0.846125, \"a\":1 },\r\n\t\t\t{ \"r\":1, \"g\":0.885017, \"b\":0.857102, \"a\":1 },\r\n\t\t\t{ \"r\":1, \"g\":0.889521, \"b\":0.868044, \"a\":1 },\r\n\t\t\t{ \"r\":1, \"g\":0.893977, \"b\":0.878951, \"a\":1 },\r\n\t\t\t{ \"r\":1, \"g\":0.898386, \"b\":0.889822, \"a\":1 },\r\n\t\t\t{ \"r\":1, \"g\":0.902747, \"b\":0.900657, \"a\":1 },\r\n\t\t\t{ \"r\":1, \"g\":0.907061, \"b\":0.911453, \"a\":1 },\r\n\t\t\t{ \"r\":1, \"g\":0.91133, \"b\":0.922211, \"a\":1 },\r\n\t\t\t{ \"r\":1, \"g\":0.915552, \"b\":0.932929, \"a\":1 },\r\n\t\t\t{ \"r\":1, \"g\":0.91973, \"b\":0.943608, \"a\":1 },\r\n\t\t\t{ \"r\":1, \"g\":0.923863, \"b\":0.954246, \"a\":1 },\r\n\t\t\t{ \"r\":1, \"g\":0.927952, \"b\":0.964842, \"a\":1 },\r\n\t\t\t{ \"r\":1, \"g\":0.931998, \"b\":0.975397, \"a\":1 },\r\n\t\t\t{ \"r\":1, \"g\":0.936001, \"b\":0.985909, \"a\":1 },\r\n\t\t\t{ \"r\":1, \"g\":0.939961, \"b\":0.996379, \"a\":1 },\r\n\t\t\t{ \"r\":0.993241, \"g\":0.9375, \"b\":1, \"a\":1 },\r\n\t\t\t{ \"r\":0.983104, \"g\":0.931743, \"b\":1, \"a\":1 },\r\n\t\t\t{ \"r\":0.973213, \"g\":0.926103, \"b\":1, \"a\":1 },\r\n\t\t\t{ \"r\":0.963562, \"g\":0.920576, \"b\":1,\"a\":1 },\r\n\t\t\t{ \"r\":0.954141, \"g\":0.915159, \"b\":1, \"a\":1 },\r\n\t\t\t{ \"r\":0.944943, \"g\":0.909849, \"b\":1, \"a\":1 },\r\n\t\t\t{ \"r\":0.935961, \"g\":0.904643, \"b\":1, \"a\":1 },\r\n\t\t\t{ \"r\":0.927189, \"g\":0.899538, \"b\":1,\"a\": 1 },\r\n\t\t\t{ \"r\":0.918618, \"g\":0.894531, \"b\":1,\"a\": 1 },\r\n\t\t\t{ \"r\":0.910244, \"g\":0.88962, \"b\":1, \"a\":1 },\r\n\t\t\t{ \"r\":0.902059, \"g\":0.884801, \"b\":1, \"a\":1 },\r\n\t\t\t{ \"r\":0.894058, \"g\":0.880074, \"b\":1, \"a\":1 },\r\n\t\t\t{ \"r\":0.886236, \"g\":0.875434, \"b\":1, \"a\":1 },\r\n\t\t\t{ \"r\":0.878586, \"g\":0.87088, \"b\":1, \"a\":1 },\r\n\t\t\t{ \"r\":0.871103, \"g\":0.86641, \"b\":1, \"a\":1 },\r\n\t\t\t{ \"r\":0.863783, \"g\":0.862021, \"b\":1,\"a\": 1 },\r\n\t\t\t{ \"r\":0.856621, \"g\":0.857712, \"b\":1,\"a\": 1 },\r\n\t\t\t{ \"r\":0.849611, \"g\":0.853479, \"b\":1,\"a\": 1 },\r\n\t\t\t{ \"r\":0.84275, \"g\":0.849322, \"b\":1,\"a\": 1 },\r\n\t\t\t{ \"r\":0.836033, \"g\":0.845239, \"b\":1,\"a\": 1 },\r\n\t\t\t{ \"r\":0.829456, \"g\":0.841227, \"b\":1,\"a\": 1 },\r\n\t\t\t{ \"r\":0.823014, \"g\":0.837285, \"b\":1, \"a\":1 },\r\n\t\t\t{ \"r\":0.816705, \"g\":0.83341, \"b\":1, \"a\":1 },\r\n\t\t\t{ \"r\":0.810524, \"g\":0.829602, \"b\":1, \"a\":1 },\r\n\t\t\t{ \"r\":0.804468, \"g\":0.825859, \"b\":1, \"a\":1 },\r\n\t\t\t{ \"r\":0.798532, \"g\":0.82218, \"b\":1, \"a\":1 },\r\n\t\t\t{ \"r\":0.792715, \"g\":0.818562, \"b\":1, \"a\":1 },\r\n\t\t\t{ \"r\":0.787012, \"g\":0.815004, \"b\":1, \"a\":1 },\r\n\t\t\t{ \"r\":0.781421, \"g\":0.811505, \"b\":1, \"a\":1 },\r\n\t\t\t{ \"r\":0.775939, \"g\":0.808063, \"b\":1, \"a\":1 },\r\n\t\t\t{ \"r\":0.770561, \"g\":0.804678, \"b\":1, \"a\":1 },\r\n\t\t\t{ \"r\":0.765287, \"g\":0.801348, \"b\":1, \"a\":1 },\r\n\t\t\t{ \"r\":0.760112, \"g\":0.798071, \"b\":1, \"a\":1 },\r\n\t\t\t{ \"r\":0.755035, \"g\":0.794846, \"b\":1, \"a\":1 },\r\n\t\t\t{ \"r\":0.750053, \"g\":0.791672, \"b\":1, \"a\":1 },\r\n\t\t\t{ \"r\":0.745164, \"g\":0.788549, \"b\":1, \"a\":1 },\r\n\t\t\t{ \"r\":0.740364, \"g\":0.785474, \"b\":1, \"a\":1 },\r\n\t\t\t{ \"r\":0.735652, \"g\":0.782448, \"b\":1, \"a\":1 },\r\n\t\t\t{ \"r\":0.731026, \"g\":0.779468, \"b\":1, \"a\":1 },\r\n\t\t\t{ \"r\":0.726482, \"g\":0.776534, \"b\":1, \"a\":1 },\r\n\t\t\t{ \"r\":0.722021, \"g\":0.773644, \"b\":1, \"a\":1 },\r\n\t\t\t{ \"r\":0.717638, \"g\":0.770798, \"b\":1, \"a\":1 },\r\n\t\t\t{ \"r\":0.713333, \"g\":0.767996, \"b\":1, \"a\":1 },\r\n\t\t\t{ \"r\":0.709103, \"g\":0.765235, \"b\":1, \"a\":1 },\r\n\t\t\t{ \"r\":0.704947, \"g\":0.762515, \"b\":1, \"a\":1 },\r\n\t\t\t{ \"r\":0.700862, \"g\":0.759835, \"b\":1, \"a\":1 },\r\n\t\t\t{ \"r\":0.696848, \"g\":0.757195, \"b\":1, \"a\":1 },\r\n\t\t\t{ \"r\":0.692902, \"g\":0.754593, \"b\":1, \"a\":1 },\r\n\t\t\t{ \"r\":0.689023, \"g\":0.752029, \"b\":1, \"a\":1 },\r\n\t\t\t{ \"r\":0.685208, \"g\":0.749502, \"b\":1, \"a\":1 },\r\n\t\t\t{ \"r\":0.681458, \"g\":0.747011, \"b\":1, \"a\":1 },\r\n\t\t\t{ \"r\":0.67777, \"g\":0.744555, \"b\":1, \"a\":1 },\r\n\t\t\t{ \"r\":0.674143, \"g\":0.742134, \"b\":1,\"a\": 1 },\r\n\t\t\t{ \"r\":0.670574, \"g\":0.739747, \"b\":1,\"a\": 1 },\r\n\t\t\t{ \"r\":0.667064, \"g\":0.737394, \"b\":1,\"a\": 1 },\r\n\t\t\t{ \"r\":0.663611, \"g\":0.735073, \"b\":1, \"a\":1 },\r\n\t\t\t{ \"r\":0.660213, \"g\":0.732785, \"b\":1, \"a\":1 },\r\n\t\t\t{ \"r\":0.656869, \"g\":0.730528, \"b\":1, \"a\":1 },\r\n\t\t\t{ \"r\":0.653579, \"g\":0.728301, \"b\":1, \"a\":1 },\r\n\t\t\t{ \"r\":0.65034, \"g\":0.726105, \"b\":1, \"a\":1 },\r\n\t\t\t{ \"r\":0.647151, \"g\":0.723939, \"b\":1, \"a\":1 },\r\n\t\t\t{ \"r\":0.644013, \"g\":0.721801, \"b\":1, \"a\":1 },\r\n\t\t\t{ \"r\":0.640922, \"g\":0.719692, \"b\":1, \"a\":1 },\r\n\t\t\t{ \"r\":0.637879, \"g\":0.717611, \"b\":1, \"a\":1 },\r\n\t\t\t{ \"r\":0.634883, \"g\":0.715558, \"b\":1, \"a\":1 },\r\n\t\t\t{ \"r\":0.631932, \"g\":0.713531, \"b\":1, \"a\":1 },\r\n\t\t\t{ \"r\":0.629025, \"g\":0.711531, \"b\":1, \"a\":1 },\r\n\t\t\t{ \"r\":0.626162, \"g\":0.709557, \"b\":1, \"a\":1 },\r\n\t\t\t{ \"r\":0.623342, \"g\":0.707609, \"b\":1, \"a\":1 },\r\n\t\t\t{ \"r\":0.620563, \"g\":0.705685, \"b\":1, \"a\":1 },\r\n\t\t\t{ \"r\":0.617825, \"g\":0.703786, \"b\":1, \"a\":1 },\r\n\t\t\t{ \"r\":0.615127, \"g\":0.701911, \"b\":1,\"a\": 1 },\r\n\t\t\t{ \"r\":0.612469, \"g\":0.70006, \"b\":1, \"a\":1 },\r\n\t\t\t{ \"r\":0.609848, \"g\":0.698231, \"b\":1, \"a\":1 },\r\n\t\t\t{ \"r\":0.607266, \"g\":0.696426, \"b\":1, \"a\":1 },\r\n\t\t\t{ \"r\":0.60472, \"g\":0.694643, \"b\":1, \"a\":1 }\r\n        ];\r\n\r\n\t\tlet idx : number = Math.floor((temp - MinTemp) / (MaxTemp - MinTemp) * colNum);\r\n\t\tidx = Math.min(colNum - 1, idx);\r\n\t\tidx = Math.max(0, idx);\r\n\t\treturn col[idx];\r\n\t}\r\n\r\n\t// Velocity curve with dark matter\r\n\tpublic static velocityWithDarkMatter(r : number) : number\r\n\t{\r\n\t\tif (r==0)\r\n\t\t\treturn 0;\r\n\r\n\t\tlet MZ : number = 100;\r\n\t\tlet massHalo : number = Helper.massHalo(r);\r\n\t\tlet massDisc : number = Helper.massDisc(r);\r\n\t\tlet v = 20000.0 * Math.sqrt(Helper.CONTANT_OF_GRAVITY * (massHalo + massDisc + MZ) / r); \r\n\t\treturn v;\r\n\t}\r\n\r\n\t// velocity curve without dark matter\r\n\tpublic static velocityWithoutDarkMatter(r : number) : number\r\n\t{\r\n\t\tif (r==0)\r\n\t\t\treturn 0;\r\n\r\n\t\tlet MZ : number = 100;\r\n\t\treturn 20000.0 * Math.sqrt(Helper.CONTANT_OF_GRAVITY * (Helper.massDisc(r) + MZ) / r);\r\n\t}\r\n\r\n\tprivate static massDisc(r : number) : number\r\n\t{\r\n\t\tlet d : number = 2000;\t\t// Dicke der Scheibe\r\n\t\tlet rho_so : number = 1;\t// Dichte im Mittelpunkt\r\n\t\tlet rH : number = 2000;\t// Radius auf dem die Dichte um die Hälfte gefallen ist\r\n\t\treturn rho_so * Math.exp(-r / rH) * (r * r) * Math.PI * d;\r\n\t}\r\n\r\n\tprivate static massHalo(r : number) : number\r\n\t{\r\n\t\tlet rho_h0 : number = 0.15;\r\n\t\tlet rC : number = 2500;\r\n\t\treturn rho_h0 * 1 / (1 + Math.pow(r / rC, 2)) * (4 * Math.PI * Math.pow(r, 3) / 3);\r\n\t}\r\n};\r\n","export class Vec2 {\r\n    public x : number = 0;\r\n    public y : number = 0;\r\n}\r\n\r\nexport class Vec3 {\r\n    constructor(x : number = 0, y : number = 0,z : number = 0)\r\n    {\r\n        this.x = x;\r\n        this.y = y;\r\n        this.z = z;\r\n    }\r\n\r\n    public x : number = 0;\r\n    public y : number = 0;\r\n    public z : number = 0;\r\n}\r\n\r\nexport class Color {\r\n    constructor(r: number = 1, g:number = 1, b:number = 1, a:number = 0)\r\n    {\r\n        this.r = r;\r\n        this.g = g;\r\n        this.b = b;\r\n        this.a = a;\r\n    }\r\n\r\n    public r : number = 0;\r\n    public g : number = 0;\r\n    public b : number = 0;\r\n    public a : number = 0;\r\n}\r\n\r\nexport class Star {\r\n\tpublic theta0 : number = 0;    // initial angular position on the ellipse\r\n\tpublic velTheta: number = 0;   // angular velocity\r\n\tpublic tiltAngle: number = 0;  // tilt angle of the ellipse\r\n\tpublic a: number = 0;          // kleine halbachse\r\n\tpublic b: number = 0;          // große halbachse\r\n\tpublic temp: number = 0;       // star temperature\r\n\tpublic mag: number = 0;       // brightness;\r\n\tpublic type: number = 0;\t   // Type 0:star, 1:dust, 2 and 3: h2 regions\t\r\n}\r\n\r\nexport class GalaxyParam {\r\n    constructor(\r\n        rad : number, \r\n        radCore : number, \r\n        deltaAng : number, \r\n        ex1 : number, \r\n        ex2 : number, \r\n        numStars : number, \r\n        hasDarkMatter:boolean,\r\n        pertN : number,\r\n        pertAmp : number,\r\n        dustRenderSize : number,\r\n        baseTemp : number) {\r\n        this.rad = rad\r\n        this.radCore = radCore\r\n        this.deltaAng = deltaAng\r\n        this.ex1 = ex1\r\n        this.ex2 = ex2\r\n        this.numStars = numStars\r\n        this.hasDarkMatter = hasDarkMatter\r\n        this.pertN = pertN\r\n        this.pertAmp = pertAmp\r\n        this.dustRenderSize = dustRenderSize\r\n        this.baseTemp = baseTemp\r\n    }\r\n\r\n    public rad : number = 0\r\n    public radCore : number = 0\r\n    public deltaAng : number = 0\r\n    public ex1 : number = 0\r\n    public ex2 : number = 0\r\n    public numStars : number = 0\r\n    public hasDarkMatter : boolean = true\r\n    public pertN : number = 0\r\n    public pertAmp : number = 0\r\n    public dustRenderSize : number = 0\r\n    public baseTemp : number = 0\r\n}\r\n\r\nexport abstract class VertexBase {\r\n    constructor() {}\r\n\r\n    public abstract writeTo(array : Float32Array, offset : number) : void\r\n    public abstract numberOfFloats() : number;\r\n}\r\n\r\nexport class VertexColor extends VertexBase\r\n{\r\n    constructor(x : number, y : number, z : number, r : number, g : number, b : number, a : number)\r\n    {\r\n        super()\r\n\r\n        this.pos.x = x\r\n        this.pos.y = y\r\n        this.pos.z = z\r\n\r\n        this.col.r = r\r\n        this.col.g = g\r\n        this.col.b = b\r\n        this.col.a = a        \r\n    }\r\n\r\n\tpublic pos : Vec3 = new Vec3();\r\n    public col : Color = new Color(0,0,0,0);\r\n\r\n    public numberOfFloats() : number {\r\n        return 7\r\n    }\r\n\r\n    public writeTo(array : Float32Array, offset : number) {\r\n        array[offset + 0] = this.pos.x;\r\n        array[offset + 1] = this.pos.y;\r\n        array[offset + 2] = this.pos.z;\r\n\r\n        array[offset + 3] = this.col.r;\r\n        array[offset + 4] = this.col.g;\r\n        array[offset + 5] = this.col.b;\r\n        array[offset + 6] = this.col.a;\r\n    }\r\n};\r\n\r\nexport class VertexStar extends VertexBase\r\n{\r\n    \r\n\tpublic star : Star = new Star()\r\n    public col : Color = new Color()\r\n\r\n    constructor(star : Star, col : Color) {\r\n        super()\r\n\r\n        this.star = star\r\n        this.col = col\r\n    }\r\n\r\n    public numberOfFloats() : number {\r\n        return 8 + 4;\r\n    }\r\n    \r\n    public writeTo(array : Float32Array, offset : number) {\r\n        array[offset + 0] = this.star.theta0\r\n        array[offset + 1] = this.star.velTheta\r\n        array[offset + 2] = this.star.tiltAngle\r\n        array[offset + 3] = this.star.a\r\n        array[offset + 4] = this.star.b\r\n        array[offset + 5] = this.star.temp\r\n        array[offset + 6] = this.star.mag\r\n        array[offset + 7] = this.star.type\r\n\r\n        array[offset + 8] = this.col.r\r\n        array[offset + 9] = this.col.g\r\n        array[offset + 10] = this.col.b\r\n        array[offset + 11] = this.col.a\r\n    }\r\n};\r\n\r\n\r\n","import { GalaxyRenderer, RenderUpdateHint } from \"./GalaxyRenderer\";\r\nimport { Galaxy } from \"./Galaxy\";\r\n\r\n\r\nexport class UiController {\r\n    private renderer : GalaxyRenderer\r\n\r\n    private rad : number = 0\r\n    private coreRad : number= 0\r\n    private exInner : number= 0\r\n    private exOuter : number= 0\r\n    private angleOffset : number= 0\r\n    private pertN : number = 0\r\n\r\n    private _isEditMode : boolean = false\r\n\r\n    private renderState : boolean[] = []\r\n\r\n    private set isEditMode(mode: boolean)  {\r\n        if (this._isEditMode == mode)\r\n            return\r\n\r\n        if (this._isEditMode==false)\r\n            this.enterEditMode();\r\n        else if (this._isEditMode==true)\r\n            this.leaveEditMode();\r\n    }\r\n\r\n    private get galaxy() : Galaxy {\r\n        return this.renderer.galaxy\r\n    }\r\n\r\n    constructor(renderer : GalaxyRenderer) {\r\n        this.renderer = renderer\r\n\r\n        this.updateGalaxyParam()\r\n    }\r\n\r\n    public updateGalaxyParam() : void {\r\n        this.rad = this.galaxy.rad\r\n        this.coreRad = this.galaxy.coreRad / this.galaxy.rad\r\n        this.exInner = this.galaxy.exInner\r\n        this.exOuter = this.galaxy.exOuter\r\n        this.angleOffset = this.galaxy.angleOffset\r\n        this.pertN = this.galaxy.pertN\r\n    }\r\n\r\n    private leaveEditMode() : void {\r\n        if (!this._isEditMode)\r\n            return\r\n\r\n        console.log(\"leaving edit mode\")\r\n\r\n        try\r\n        {\r\n            this.renderer.showDensityWaves = this.renderState[0];\r\n            this.renderer.showH2 = this.renderState[1];\r\n            this.renderer.showDust = this.renderState[2];\r\n            this.renderer.showStars = this.renderState[3];\r\n            this.renderer.showVelocity = this.renderState[4];\r\n            this.renderer.showDustFilaments = this.renderState[5];\r\n            \r\n            this.renderState = []\r\n        }\r\n        finally\r\n        {\r\n            this._isEditMode = false\r\n            this.renderer.renderUpdateHint = RenderUpdateHint.STARS\r\n        }\r\n    }\r\n\r\n    private enterEditMode() : void {\r\n        if (this._isEditMode)\r\n            return\r\n\r\n        console.log(\"entering edit mode\")\r\n\r\n        try\r\n        {\r\n            this.renderState = []\r\n            this.renderState.push(this.renderer.showDensityWaves)\r\n            this.renderState.push(this.renderer.showH2)\r\n            this.renderState.push(this.renderer.showDust)\r\n            this.renderState.push(this.renderer.showStars)\r\n            this.renderState.push(this.renderer.showVelocity)\r\n            this.renderState.push(this.renderer.showDustFilaments)\r\n\r\n            this.renderer.showDensityWaves = true;\r\n            this.renderer.showH2 = false;\r\n            this.renderer.showDust = false;\r\n            this.renderer.showStars = false;\r\n            this.renderer.showVelocity = false;\r\n            this.renderer.showDustFilaments = false;\r\n        }\r\n        finally\r\n        {\r\n            this._isEditMode = true\r\n        }\r\n    }\r\n\r\n    public initilializeSlider(id : string, idLabel : string, prop : string) {\r\n        let slider : HTMLInputElement = document.getElementById(id) as HTMLInputElement\r\n        if (slider == null)\r\n            throw new Error(\"UiController.initilializeSlider(): Ther is no input element with that id!\")\r\n\r\n        slider.value = (this as any)[prop]\r\n        let label : HTMLElement = document.getElementById(idLabel) as HTMLElement;\r\n        label.innerHTML = slider.value\r\n\r\n        let obj : any = this.renderer\r\n        slider.oninput = function() {\r\n            obj[prop] = parseFloat(slider.value);\r\n            label.innerHTML = slider.value;\r\n        } \r\n    }\r\n\r\n    public initilializeEditModeSlider(id : string, idLabel : string, prop : string) : void {\r\n        let slider : HTMLInputElement = document.getElementById(id) as HTMLInputElement\r\n        if (slider == null)\r\n            throw new Error(\"UiController.initilializeSlider(): Ther is no input element with that id!\")\r\n\r\n        slider.value = (this as any)[prop]\r\n        let label : HTMLElement = document.getElementById(idLabel) as HTMLElement;\r\n        label.innerHTML = slider.value\r\n\r\n        let self : UiController = this;\r\n        slider.oninput = function() {\r\n            (self as any)[prop] = parseFloat(slider.value)\r\n\r\n            self.isEditMode = true;\r\n\r\n            label.innerHTML = slider.value\r\n            self.update()\r\n        } \r\n\r\n        slider.onmouseup = function() {\r\n            self.isEditMode = false;\r\n        }\r\n    }\r\n\r\n    private update() : void  {\r\n        this.renderer.updateDensityWaveParam(\r\n            this.coreRad * this.rad ,\r\n            this.rad,\r\n            this.angleOffset,\r\n            this.exInner,\r\n            this.exOuter,\r\n            this.pertN);\r\n    }\r\n\r\n}","import { mat4 } from 'gl-matrix'\r\nimport { VertexBase } from './Types'\r\n\r\nexport class AttributeDefinition\r\n{\r\n    constructor(\r\n        attribIdx : number = 0,\r\n        size : number = 0,\r\n        offset : number = 0)\r\n    {\r\n        this.attribIdx = attribIdx;\r\n        this.size = size;\r\n        this.offset = offset;\r\n    }\r\n\r\n    attribIdx : number = 0;\r\n    size : number = 0;\r\n    offset : number = 0;\r\n}\r\n\r\n\r\nexport abstract class VertexBufferBase<TVertex extends VertexBase> \r\n{\r\n    private vbo : WebGLBuffer | null = null;\r\n\tprivate ibo : WebGLBuffer | null = null;\r\n\tprivate vao : WebGLVertexArrayObject | null = null;\r\n\r\n\tprivate vert : TVertex[] = [];\r\n\tprivate idx : number[] = [];\r\n\r\n\tprotected shaderProgram? : WebGLProgram | null = null;\r\n\tprivate _primitiveType : number = 0;\r\n\r\n\tprotected bufferMode : number = 0;\r\n    protected readonly gl : WebGL2RenderingContext;\r\n\r\n    private attributes : AttributeDefinition[] = [];\r\n\r\n    public constructor(gl : WebGL2RenderingContext, bufferMode : number)\r\n\t{\r\n        this.gl = gl;\r\n\t\tthis.bufferMode = bufferMode;\r\n    }\r\n    \r\n    protected defineAttributes(attribList : AttributeDefinition[] ) : void\r\n\t{\r\n\t\tthis.attributes = [];\r\n        \r\n        for (let i=0; i<attribList.length; ++i)\r\n\t\t{\r\n            this.attributes.push(attribList[i]);\r\n        }\r\n\t}\r\n\r\n\tprotected get primitiveType() : number \r\n\t{\r\n\t\treturn this._primitiveType;\r\n\t}\r\n\r\n\tprotected set primitiveType(value : number) \r\n\t{\r\n\t\tthis._primitiveType = value;\r\n\t}\r\n\r\n\tprotected get arrayElementCount() : number\r\n\t{\r\n\t\treturn this.idx.length;\r\n\t}\r\n\r\n\tprotected get vertexArrayObject() : WebGLBuffer \r\n\t{\r\n\t\tif (this.vao==null)\r\n\t\t\tthrow Error(\"VertexBufferBase.vertexArrayObject(): vertex array object is null!\");\r\n\r\n\t\treturn this.vao;\r\n\t}\r\n\r\n    protected abstract  getVertexShaderSource() : string;\r\n\r\n    protected abstract getFragmentShaderSource() : string;\r\n\r\n\tprivate createShader(shaderType : number, shaderSource : string) : WebGLShader\r\n\t{\r\n\t\tlet shader : WebGLShader = this.gl.createShader(shaderType) as WebGLShader;\r\n\t\tthis.gl.shaderSource(shader, shaderSource);\r\n\t\tthis.gl.compileShader(shader);\r\n\r\n\t\tlet isCompiled : number = this.gl.getShaderParameter(shader, this.gl.COMPILE_STATUS);\r\n\t\tif (!isCompiled)\r\n\t\t{\r\n\t\t\tlet msg = this.gl.getShaderInfoLog(shader);\r\n\r\n\t\t\t// We don't need the shader anymore.\r\n\t\t\tthis.gl.deleteShader(shader);\r\n\r\n\t\t\tif (shaderType==this.gl.VERTEX_SHADER)\r\n\t\t\t\tthrow new Error(\"VertexBuffer: Vertex shader compilation failed: \" + msg);\r\n\t\t\telse\t\t\t\t\r\n\t\t\t\tthrow new Error(\"VertexBuffer: Fragment shader compilation failed: \" + msg);\r\n\t\t}\r\n\r\n\t\treturn shader;\r\n\t}\r\n\t\r\n\tpublic initialize() : void {\r\n\t\t//\r\n\t\t// 1.) Create Vertex buffer\r\n\t\t//\r\n\r\n\t\tthis.vbo = this.gl.createBuffer();\r\n\t\tthis.ibo = this.gl.createBuffer();\r\n\t\tthis.vao = this.gl.createVertexArray();\r\n\r\n\t\t//\r\n\t\t// Initialize WebGL\r\n\t\t// \r\n\r\n\t\tlet srcVertex : string = this.getVertexShaderSource();\r\n\t\tlet vertexShader : WebGLShader = this.createShader(this.gl.VERTEX_SHADER, srcVertex);\r\n\r\n\t\tlet srcFragment : string = this.getFragmentShaderSource();\r\n\t\tlet fragmentShader : WebGLShader = this.createShader(this.gl.FRAGMENT_SHADER, srcFragment);\r\n\r\n\t\tthis.shaderProgram = this.gl.createProgram();\r\n\t\tif (this.shaderProgram == null)\r\n\t\t\tthrow new Error(\"VertexBufferBase.initialize(): shaderProgram cannot be created!\");\r\n\r\n\t\tthis.gl.attachShader(this.shaderProgram, vertexShader);\r\n\t\tthis.gl.attachShader(this.shaderProgram, fragmentShader);\r\n\t\tthis.gl.linkProgram(this.shaderProgram);\r\n\r\n\t\tvar linked : any = this.gl.getProgramParameter(this.shaderProgram, this.gl.LINK_STATUS);\r\n\t\tif (!linked)\r\n\t\t{\r\n\t\t\tlet infoLog : string | null = this.gl.getProgramInfoLog(this.shaderProgram);\r\n\r\n\t\t\tthis.gl.deleteProgram(this.shaderProgram);\r\n\t\t\tthis.gl.deleteShader(vertexShader);\r\n\t\t\tthis.gl.deleteShader(fragmentShader);\r\n\r\n\t\t\tthrow new Error(\"VertexBufferBase.initialize():: shader program linking failed!\\r\\n\" + infoLog);\r\n\t\t}\r\n\r\n\t\t// Always detach shaders after a successful link.\r\n\t\tthis.gl.detachShader(this.shaderProgram, vertexShader);\r\n\t\tthis.gl.detachShader(this.shaderProgram, fragmentShader);\r\n\t}\r\n\r\n\tprotected releaseAttribArray() : void {\r\n\t\tfor (let i=0; i<this.attributes.length; ++i)\r\n\t\t{\r\n\t\t\tlet attribIdx = this.attributes[i].attribIdx;\r\n\t\t\tthis.gl.disableVertexAttribArray(attribIdx);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic release() : void\t{\r\n\t\tthis.releaseAttribArray();\r\n\r\n\t\tthis.gl.bindBuffer(this.gl.ARRAY_BUFFER, 0);\r\n\t\tthis.gl.bindBuffer(this.gl.ELEMENT_ARRAY_BUFFER, 0);\r\n\t\tthis.gl.bindVertexArray(null);\r\n\r\n\t\tif (this.vbo != null)\r\n\t\t\tthis.gl.deleteBuffer(this.vbo);\r\n\r\n\t\tif (this.ibo != null)\r\n\t\t\tthis.gl.deleteBuffer(this.ibo);\r\n\r\n\t\tif (this.vao != null)\r\n\t\t\tthis.gl.deleteVertexArray(this.vao);\r\n\t}\r\n\r\n\tprotected onSetCustomShaderVariables() : void {\r\n\t}\r\n\r\n\tprotected onBeforeDraw() : void\t{\r\n\t}\r\n\r\n\tpublic draw(matView : mat4, matProjection : mat4) : void\r\n\t{\r\n\t\tif (this.shaderProgram==null)\r\n\t\t\tthrow new Error(\"VertexBufferBase.draw(): shader program is null!\");\r\n\t\t\r\n\t\tthis.gl.useProgram(this.shaderProgram);\r\n\r\n\t\tlet viewMatIdx = this.gl.getUniformLocation(this.shaderProgram, \"viewMat\");\r\n\t\tthis.gl.uniformMatrix4fv(viewMatIdx, false, matView);\r\n\t\t\r\n\t\tlet projMatIdx = this.gl.getUniformLocation(this.shaderProgram, \"projMat\");\r\n\t\tthis.gl.uniformMatrix4fv(projMatIdx, false, matProjection);\r\n\r\n\t\tthis.onSetCustomShaderVariables();\r\n\r\n\t\tthis.gl.enable(this.gl.BLEND);\r\n\t\tthis.gl.blendFunc(this.gl.SRC_ALPHA, this.gl.ONE);\r\n\t\tthis.gl.blendEquation(this.gl.FUNC_ADD);\r\n\r\n\t\tthis.onBeforeDraw();\r\n\r\n\t\tthis.gl.bindVertexArray(this.vao);\r\n\t\tthis.gl.drawElements(this.primitiveType, this.idx.length, this.gl.UNSIGNED_INT, 0);\r\n\t\tthis.gl.bindVertexArray(null);\r\n\r\n\t\tthis.gl.disable(this.gl.BLEND);\r\n\t\tthis.gl.useProgram(null);\r\n\t}\r\n\r\n\tpublic createBuffer(vert : TVertex[], idx : number[], type : number) : void\r\n\t{\r\n\t\tif (vert.length==0)\r\n\t\t\tthrow Error(\"VertexBufferBase.createBuffer: vertex array size is 0!\");\r\n\r\n\t\tif (idx.length==0)\r\n\t\t\tthrow Error(\"VertexBufferBase.createBuffer: index array size is 0!\");\r\n\r\n\t\tthis.vert = vert;\r\n\t\tthis.idx = idx;\r\n\t\tthis.primitiveType = type;\r\n\r\n\t\t// Copy vertex data into a Float32Array\r\n\t\tlet numberOfFloats : number = vert[0].numberOfFloats();\r\n\t\tlet floatArray = new Float32Array(vert.length * numberOfFloats);\r\n\t\tfor (let i = 0; i<vert.length; ++i)\r\n\t\t{\r\n\t\t\tvert[i].writeTo(floatArray, i * numberOfFloats);\r\n\t\t}\r\n\r\n\t\tthis.gl.bindBuffer(this.gl.ARRAY_BUFFER, this.vbo);\r\n\t\tthis.gl.bufferData(this.gl.ARRAY_BUFFER, floatArray, this.bufferMode);\r\n\r\n\t\tthis.gl.bindVertexArray(this.vao);\r\n\t\tthis.gl.bindBuffer(this.gl.ELEMENT_ARRAY_BUFFER, this.ibo);\r\n\r\n\t\t// Set up vertex buffer array\r\n\t\tthis.gl.bindBuffer(this.gl.ARRAY_BUFFER, this.vbo);\r\n\r\n\t\t// Set up vertex buffer attributes\r\n\t\tthis.attributes.forEach((attrib) => {\r\n\t\t\tthis.gl.enableVertexAttribArray(attrib.attribIdx);\r\n\t\t\tthis.gl.vertexAttribPointer(attrib.attribIdx, attrib.size, this.gl.FLOAT, false, numberOfFloats*4, attrib.offset);\r\n\t\t});\r\n\r\n\t\t// Set up index buffer array\r\n\t\tthis.gl.bindBuffer(this.gl.ELEMENT_ARRAY_BUFFER, this.ibo);\r\n\r\n\t\tlet intArray = new Uint32Array(idx.length);\r\n\t\tfor (let i = 0; i<idx.length; ++i) {\r\n\t\t\tintArray[i] = idx[i];\r\n\t\t}\r\n\t\tthis.gl.bufferData(this.gl.ELEMENT_ARRAY_BUFFER, intArray, this.gl.STATIC_DRAW);\r\n\r\n\t\tlet errc = this.gl.getError();\r\n\t\tif (errc != this.gl.NO_ERROR)\r\n\t\t\tthrow Error(\"VertexBufferBase: Cannot create vbo! (Error \" + errc + \")\");\r\n\r\n\t\tthis.gl.bindVertexArray(null);\r\n\t}\r\n}\r\n","import { Vec3, Color, VertexColor } from './Types'\r\nimport { VertexBufferBase, AttributeDefinition } from './VertexBufferBase'\r\n\r\nexport class VertexBufferLines extends VertexBufferBase<VertexColor>\r\n{\r\n    private lineWidth : number = 1;\r\n    private readonly attPosition : number = 0;\r\n    private readonly attColor : number = 1;\r\n\r\n\tconstructor(gl : WebGL2RenderingContext, lineWidth : number, bufferMode : number)\r\n\t{\r\n        super(gl, bufferMode);\r\n        this.lineWidth = lineWidth;\r\n        \r\n\t\tthis.defineAttributes([ \r\n\t\t\tnew AttributeDefinition(this.attPosition, 3, 0),\r\n\t\t\tnew AttributeDefinition(this.attColor,    4, 3*4)\r\n        ]);\r\n    }\r\n    \r\n\tprotected onBeforeDraw() : void \r\n\t{\r\n\t\tthis.gl.lineWidth(this.lineWidth);\r\n    }\r\n    \r\n\tprotected getVertexShaderSource() : string\r\n\t{\r\n\t\treturn `#version 300 es\r\n\r\nprecision mediump float;\r\n\r\nuniform mat4 projMat;\r\nuniform mat4 viewMat;\r\n\r\nlayout(location = 0) in vec3 position;\r\nlayout(location = 1) in vec4 color;\r\n\r\nout vec4 vertexColor;\r\n\r\nvoid main()\r\n{\r\n\tgl_Position =  projMat * vec4(position, 1);\r\n\tgl_PointSize = 2.0;\r\n\tvertexColor = color;\r\n}`;\r\n\t}\r\n\r\n    protected getFragmentShaderSource() : string\r\n\t{\r\n\t\treturn `#version 300 es \r\n\r\nprecision mediump float;\r\n\r\nout vec4 FragColor;\r\n\r\nin vec4 vertexColor;\r\n\r\nvoid main()\r\n{\r\n\tFragColor = vertexColor;\r\n}`;\r\n\t}\r\n}\r\n","import { mat4 } from 'gl-matrix'\r\n\r\nimport { Vec3, Color, VertexStar, Star } from './Types'\r\nimport { VertexBufferBase, AttributeDefinition } from './VertexBufferBase'\r\n\r\n\r\nexport class VertexBufferStars extends VertexBufferBase<VertexStar>\r\n{\r\n\tprivate pertN : number = 0;\r\n\tprivate dustSize : number = 0;\r\n\tprivate pertAmp : number = 0;\r\n\tprivate time : number = 0;\r\n\tprivate blendFunc : number = 0;\r\n\tprivate blendEquation : number = 0;\r\n    private displayFeatures : number = 0;\r\n\r\n    private readonly attTheta0 : number = 0;\r\n    private readonly attVelTheta : number = 1;\r\n    private readonly attTiltAngle : number = 2;\r\n    private readonly attSemiMajorAxis : number = 3;\r\n    private readonly attSemiMinorAxis : number = 4;\r\n    private readonly attTemperature : number = 5;\r\n    private readonly attMagnitude : number = 6;\r\n    private readonly attType : number = 7;\r\n    private readonly attColor : number = 8;\r\n\r\n    constructor(gl : WebGL2RenderingContext)\r\n    {\r\n        super(gl, gl.STATIC_DRAW)\r\n\r\n        this.blendFunc = this.gl.ONE;\r\n        this.blendEquation = this.gl.FUNC_ADD;\r\n\r\n        this.defineAttributes([\r\n            new AttributeDefinition(this.attTheta0,        1, 0),\r\n            new AttributeDefinition(this.attVelTheta,      1, 4),\r\n            new AttributeDefinition(this.attTiltAngle,     1, 8),\r\n            new AttributeDefinition(this.attSemiMajorAxis, 1, 12),\r\n            new AttributeDefinition(this.attSemiMinorAxis, 1, 16),\r\n            new AttributeDefinition(this.attTemperature,   1, 20),\r\n            new AttributeDefinition(this.attMagnitude,     1, 24),\r\n            new AttributeDefinition(this.attType,          1, 28),\r\n            new AttributeDefinition(this.attColor,         4, 32)\r\n        ]);\r\n    }\r\n\r\n    public updateShaderVariables(time : number, num : number, amp : number, dustSize : number, displayFeatures : number) : void\r\n\t{\r\n\t\tthis.pertN = num;\r\n\t\tthis.pertAmp = amp;\r\n\t\tthis.time = time;\r\n\t\tthis.dustSize = dustSize;\r\n\t\tthis.displayFeatures = displayFeatures;\r\n\t}\r\n\r\n\tprotected getVertexShaderSource() : string\r\n\t{\r\n        return `#version 300 es\r\n\r\n#define DEG_TO_RAD 0.01745329251\r\n\r\nuniform mat4 projMat;\r\nuniform mat4 viewMat;\r\n\r\nuniform int pertN;\r\nuniform int dustSize;\r\nuniform int displayFeatures;\r\nuniform float pertAmp;\r\nuniform float time;\r\n\r\nlayout(location = 0) in float theta0;\r\nlayout(location = 1) in float velTheta;\r\nlayout(location = 2) in float tiltAngle;\r\nlayout(location = 3) in float a;\r\nlayout(location = 4) in float b;\r\nlayout(location = 5) in float temp;\r\nlayout(location = 6) in float mag;\r\nlayout(location = 7) in float type;\r\nlayout(location = 8) in vec4 color;\r\n\r\nout vec4 vertexColor;\r\n\r\nout float vertexType;\r\nflat out int features;\r\n\r\nvec2 calcPos(float a, float b, float theta, float velTheta, float time, float tiltAngle) {\r\n    float thetaActual = theta + velTheta * time;\r\n    float beta = -tiltAngle;\r\n    float alpha = thetaActual * DEG_TO_RAD;\r\n    float cosalpha = cos(alpha);\r\n    float sinalpha = sin(alpha);\r\n    float cosbeta = cos(beta);\r\n    float sinbeta = sin(beta);\r\n    vec2 center = vec2(0,0);\r\n    vec2 ps = vec2(center.x + (a * cosalpha * cosbeta - b * sinalpha * sinbeta),\r\n                   center.y + (a * cosalpha * sinbeta + b * sinalpha * cosbeta));\r\n    if (pertAmp > 0.0 && pertN > 0) {\r\n        ps.x += (a / pertAmp) * sin(alpha * 2.0 * float(pertN));\r\n        ps.y += (a / pertAmp) * cos(alpha * 2.0 * float(pertN));\r\n    }\r\nreturn ps;\r\n}\r\n\r\nvoid main()\r\n{\r\n    vec2 ps = calcPos(a, b, theta0, velTheta, time, tiltAngle);\r\n\r\n    if (type==0.0) {\r\n        gl_PointSize = mag * 4.0;\r\n        vertexColor = color * mag;\r\n    } else if (type==1.0) {\t\r\n        gl_PointSize = mag * 5.0 * float(dustSize);\r\n        vertexColor = color * mag;\r\n    } else if (type==2.0) {\r\n        gl_PointSize = mag * 2.0 * float(dustSize);\r\n        vertexColor = color * mag;\r\n    } else if (type==3.0) {\r\n        vec2 ps2 = calcPos(a + 1000.0, b, theta0, velTheta, time, tiltAngle);\r\n        float dst = distance(ps, ps2);\r\n        float size = ((1000.0 - dst) / 10.0) - 50.0;\r\n        gl_PointSize = size;\r\n        vertexColor = color * mag * vec4(2.0, 0.5, 0.5, 1.0);\r\n    } else if (type==4.0) {\r\n        vec2 ps2 = calcPos(a + 1000.0, b, theta0, velTheta, time, tiltAngle);\r\n        float dst = distance(ps, ps2);\r\n        float size = ((1000.0 - dst) / 10.0) - 50.0;\r\n        gl_PointSize = size/10.0;\r\n        vertexColor = vec4(1.0,1.0,1.0,1.0);\r\n    }\r\n    gl_Position =  projMat * vec4(ps, 0.0, 1.0);\r\n    vertexType = type;\r\n    features = displayFeatures;\r\n}`;\r\n\t}\r\n\r\n\tprotected getFragmentShaderSource() : string\r\n\t{\r\n        return `#version 300 es\r\n\r\nprecision mediump float;\r\n\r\nin vec4 vertexColor;\r\n\r\nin float vertexType;\r\nflat in int features;\r\n\r\nout vec4 FragColor;\r\n\r\nvoid main()\r\n{\r\n    if (vertexType==0.0) {\r\n        if ( (features & 1) ==0)\r\n            discard;\r\n        FragColor = vertexColor;\r\n        vec2 circCoord = 2.0 * gl_PointCoord - 1.0;\r\n        float alpha = 1.0 - length(circCoord);\r\n        FragColor = vec4(vertexColor.xyz, alpha);\r\n    } else if (vertexType==1.0) {\r\n        if ( (features & 2) ==0)\r\n            discard;\r\n        vec2 circCoord = 2.0 * gl_PointCoord - 1.0;\r\n        float alpha = 0.05 * (1.0 - length(circCoord));\r\n        FragColor = vec4(vertexColor.xyz, alpha);\r\n    } else if (vertexType==2.0) {\r\n        if ( (features & 4) ==0)\r\n            discard;\r\n        vec2 circCoord = 2.0 * gl_PointCoord - 1.0;\r\n        float alpha = 0.07 * (1.0 - length(circCoord));\r\n        FragColor = vec4(vertexColor.xyz, alpha);\r\n    } else if (vertexType==3.0) {\r\n        if ((features & 8) == 0)\r\n            discard;\r\n        vec2 circCoord = 2.0 * gl_PointCoord - 1.0;\r\n        float alpha = 1.0 - length(circCoord);\r\n        FragColor = vec4(vertexColor.xyz, alpha);\r\n    } else if (vertexType==4.0) {\r\n        if ((features & 8)== 0)\r\n            discard;\r\n        vec2 circCoord = 2.0 * gl_PointCoord - 1.0;\r\n        float alpha = 1.0 - length(circCoord);\r\n        FragColor = vec4(vertexColor.xyz, alpha);\r\n    }\r\n}`;\r\n    }\r\n    \r\n    protected onSetCustomShaderVariables() : void\r\n\t{\r\n        if (this.shaderProgram==null)\r\n            throw new Error(\"onSetCustomShaderVariables(): Shader program is null!\");\r\n\r\n\t\tlet varDustSize = this.gl.getUniformLocation(this.shaderProgram, \"dustSize\");\r\n\t\tthis.gl.uniform1i(varDustSize, this.dustSize);\r\n\r\n\t\tlet varPertN = this.gl.getUniformLocation(this.shaderProgram, \"pertN\");\r\n\t\tthis.gl.uniform1i(varPertN, this.pertN);\r\n\r\n\t\tlet varPertAmp = this.gl.getUniformLocation(this.shaderProgram, \"pertAmp\");\r\n\t\tthis.gl.uniform1f(varPertAmp, this.pertAmp);\r\n\r\n\t\tlet varTime = this.gl.getUniformLocation(this.shaderProgram, \"time\");\r\n\t\tthis.gl.uniform1f(varTime, this.time);\r\n\r\n\t\tlet varDisplayFeatures = this.gl.getUniformLocation(this.shaderProgram, \"displayFeatures\");\r\n\t\tthis.gl.uniform1i(varDisplayFeatures, this.displayFeatures);\r\n    }\r\n    \r\n    public draw(matView : mat4, matProjection: mat4) : void\r\n\t{\r\n        if (this.shaderProgram==null)\r\n            throw new Error(\"draw(...): Shader program is null!\");\r\n\r\n\t\tthis.gl.useProgram(this.shaderProgram);\r\n\r\n\t\tlet viewMatIdx = this.gl.getUniformLocation(this.shaderProgram, \"viewMat\");\r\n\t\tthis.gl.uniformMatrix4fv(viewMatIdx, false, matView);\r\n\r\n\t\tlet projMatIdx = this.gl.getUniformLocation(this.shaderProgram, \"projMat\");\r\n\t\tthis.gl.uniformMatrix4fv(projMatIdx, false, matProjection);\r\n\r\n\t\tthis.onSetCustomShaderVariables();\r\n\r\n\t\tthis.gl.enable(this.gl.BLEND);\r\n\t\tthis.gl.blendFunc(this.gl.SRC_ALPHA, this.blendFunc);\r\n\t\tthis.gl.blendEquation(this.blendEquation);\r\n        \r\n        this.onBeforeDraw();\r\n\r\n\t\tthis.gl.bindVertexArray(this.vertexArrayObject);\r\n\t\tthis.gl.drawElements(this.primitiveType, this.arrayElementCount, this.gl.UNSIGNED_INT, 0);\r\n\t\tthis.gl.bindVertexArray(null);\r\n\r\n\t\tthis.gl.disable(this.gl.BLEND);\r\n\t\tthis.gl.blendEquation(this.gl.FUNC_ADD);\r\n\t\tthis.gl.useProgram(null);\r\n\t}\r\n}\r\n","import { GalaxyRenderer } from './GalaxyRenderer'\r\nimport { UiController } from './UiController'\r\n\r\nexport var galaxy : GalaxyRenderer | null = null\r\nexport var uiController : UiController | null = null\r\n\r\ntry\r\n{\r\n    // The html code must contain a canvas named \"cvGalaxy\"\r\n    var canvas = document.getElementById('cvGalaxy') as HTMLCanvasElement;\r\n    if (canvas==null)\r\n    {\r\n        throw Error('\"The galaxy renderer needs a canvas object with id \"cvGalaxy\"');\r\n    }\r\n\r\n    galaxy = new GalaxyRenderer(canvas);\r\n    uiController = new UiController(galaxy);\r\n\r\n}\r\ncatch(Error)\r\n{\r\n  alert(Error.message);\r\n}","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop)","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// module exports must be returned from runtime so entry inlining is disabled\n// startup\n// Load entry module and return exports\nreturn __webpack_require__(\"./src/index.ts\");\n"],"sourceRoot":""}